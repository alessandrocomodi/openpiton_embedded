// Copyright (c) 2015 Princeton University
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of Princeton University nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY PRINCETON UNIVERSITY "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL PRINCETON UNIVERSITY BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

`include "define.vh"

// Filename: mem_test_par_driver.v.pyv
// Author: mmckeown
// Description: This module implements a driver for
//              parallel memory tests,
//              i.e. concurrent read and write operations.  
//              The actual address and data that is 
//              being tested is generated by submodules 
//              and can vary.  Note, currently there
//              can be no sequential dependencies between
//              test address/data, i.e. every test should
//              be to separate a address.  There are no
//              ordering guarantees in this test driver
//              as of now.  Would be good to figure out
//              a way to fix that

module mem_test_par_driver(
    input                               clk,
    input                               rst_n,
    input                               en,

    input      [1:0]                    test_mode_en,

    input      [2:0]                    addr_mode,
    input      [`PHY_ADDR_WIDTH-1:0]    addr_incr_val,
    input      [7:0]                    data_payload_flits,
    input      [`PHY_ADDR_WIDTH-1:0]    mem_top_addr,

    output reg                          test_mem_val,
    output reg [`NOC_DATA_WIDTH-1:0]    test_mem_data,
    input                               test_mem_rdy,

    input                               mem_test_val,
    input      [`NOC_DATA_WIDTH-1:0]    mem_test_data,
    output reg                          mem_test_rdy,

    output reg                          test_running,
    output reg                          test_done,
    output reg                          test_timeout,
    output reg                          test_passed
);

///////////////////////
// Type declarations //
///////////////////////

// Memory load header flit
// CHIPID: 14'd0
// XPOS: 8'd0
// YPOS: 8'd0
// FBITS: 4'd0
// PAYLOAD LENGTH: 8'd2
// MESSAGE TYPE: MSG_TYPE_LOAD_MEM
// MSHR/TAG: dynamic
// RESERVED: 6'd0
localparam                              MEM_LOAD_HEADER_FLIT = {14'd0, 8'd0, 8'd0, 4'd0, 8'd2,
                                                                `MSG_TYPE_LOAD_MEM, 8'd0, 6'd0};

// Memory store header flit
// CHIPID: 14'd0
// XPOS: 8'd0
// YPOS: 8'd0
// FBITS: 4'd0
// PAYLOAD LENGTH: dynamic
// MESSAGE TYPE: MSG_TYPE_STORE_MEM
// MSHR/TAG: dynamic
// RESERVED: 6'd0
localparam                              MEM_STORE_HEADER_FLIT = {14'd0, 8'd0, 8'd0, 4'd0, 8'd0,
                                                                 `MSG_TYPE_STORE_MEM, 8'd0, 6'd0};

// Memory load ack header flit
// CHIPID: 14'h2aaa
// XPOS: 8'haa
// YPOS: 8'haa
// FBITS: 4'ha
// PAYLOAD LENGTH: dynamic
// MESSAGE TYPE: MSG_TYPE_LOAD_MEM_ACK
// MSHR/TAG: dynamic
// RESERVED: 6'd0
localparam                              MEM_LOAD_ACK_HEADER = {14'h2aaa, 8'haa, 8'haa, 4'ha, 8'd0,
                                                               `MSG_TYPE_LOAD_MEM_ACK, 8'dx, 6'd0};

// Memory store ack header flit
// CHIPID: 14'h2aaa
// XPOS: 8'haa
// YPOS: 8'haa
// FBITS: 4'ha
// PAYLOAD LENGTH: 8'd0
// MESSAGE TYPE: MSG_TYPE_STORE_MEM_ACK
// MSHR/TAG: dynamic
// RESERVED: 6'd0
localparam                              MEM_STORE_ACK_HEADER = {14'h2aaa, 8'haa, 8'haa, 4'ha, 8'd0,
                                                                `MSG_TYPE_STORE_MEM_ACK, 8'dx, 6'd0};

// Flit3 for memory requests
// SRC CHIPID: 14'h2aaa
// SRC X: 8'haa
// SRC Y: 8'haa
// SRC FBITS: 4'ha
// RESERVED: 30'd0
localparam                              MEM_REQ_FLIT3 = {14'h2aaa, 8'haa, 8'haa, 4'ha, 30'd0};



// Maximum outstanding transactions
localparam                              PARALLEL_TRANSACTIONS = 256;
localparam                              PARALLEL_TRANSACTIONS_LOG2 = 8;

localparam                              MAX_PACKET_LENGTH = 11;
localparam                              MAX_PACKET_LENGTH_LOG2 = 4;

// High level test states
localparam                              TEST_STATE_RESET = 2'd0;
localparam                              TEST_STATE_RUN = 2'd1;
localparam                              TEST_STATE_PASS = 2'd2;
localparam                              TEST_STATE_FAIL = 2'd3;

// Timeout counter
localparam                              TIMEOUT_COUNTER_WIDTH = 31;
localparam                              TIMEOUT_COUNTER_THRESHOLD = 31'd1073741823;

// Test modes from one hot test_mode_en
localparam                              TEST_MODE_ADDRESS_OWN = 2'd1;
localparam                              TEST_MODE_RANDOM_DATA = 2'd2;

// Store/Load round robin IDs
localparam                              RR_STORE = 1'b0;
localparam                              RR_LOAD = 1'b1;

// Test state
reg  [1:0]                              test_state_f;
reg  [1:0]                              test_state_next;

// Timeout signals
reg                                     timeout_rst_n;
wire                                    timeout_trigger;

// Round robin store/load bit, 0 is stores turn, 1 is loads turn
reg                                     store_load_rr_f;
reg                                     store_load_rr_next;

// Outstanding memory transactions, basically MSHRs
reg  [`PHY_ADDR_WIDTH-1:0]              test_address_f[PARALLEL_TRANSACTIONS-1:0];
reg  [511:0]                            test_data_f[PARALLEL_TRANSACTIONS-1:0];
reg  [PARALLEL_TRANSACTIONS-1:0]        test_valid_f;
reg  [PARALLEL_TRANSACTIONS-1:0]        test_store_f;
reg  [PARALLEL_TRANSACTIONS-1:0]        test_store_ack_f;
reg  [PARALLEL_TRANSACTIONS-1:0]        test_load_f;
reg  [PARALLEL_TRANSACTIONS-1:0]        test_load_ack_f;

// Next data for above MSHRs
reg  [`PHY_ADDR_WIDTH-1:0]              test_address_next;
reg  [511:0]                            test_data_next;
reg  [PARALLEL_TRANSACTIONS-1:0]        test_valid_next;
reg  [PARALLEL_TRANSACTIONS-1:0]        test_store_next;
reg  [PARALLEL_TRANSACTIONS-1:0]        test_store_ack_next;
reg  [PARALLEL_TRANSACTIONS-1:0]        test_load_next;
reg  [PARALLEL_TRANSACTIONS-1:0]        test_load_ack_next;

// Priority encoded MSHR IDs
reg  [PARALLEL_TRANSACTIONS_LOG2-1:0]   first_invalid_id;
reg  [PARALLEL_TRANSACTIONS_LOG2-1:0]   first_valid_no_store_id;
reg  [PARALLEL_TRANSACTIONS_LOG2-1:0]   first_valid_store_no_load_id;
reg  [PARALLEL_TRANSACTIONS_LOG2-1:0]   first_complete_id;

// Other signals derived from MSHRs
reg                                     any_invalid;
reg                                     any_valid_no_store;
reg                                     any_valid_store_no_load;
reg                                     any_complete;

// Sending buffer
reg  [MAX_PACKET_LENGTH_LOG2-1:0]       flits_to_send_f;
reg  [MAX_PACKET_LENGTH_LOG2-1:0]       flits_to_send_next;
reg  [`NOC_DATA_WIDTH-1:0]              flit_send_buffer_f[MAX_PACKET_LENGTH-1:0];
reg  [`NOC_DATA_WIDTH-1:0]              flit_send_buffer_next[MAX_PACKET_LENGTH-1:0];
reg                                     can_load_send_buffer;

// Shifted response data for sdctrl_test, it expects the L2
// to pick correct data from 8B response, so we need to do the
// same
reg  [`NOC_DATA_WIDTH-1:0]              mem_test_data_shifted;

// Response flit counter, mshr ID, and read out expected data
reg  [MAX_PACKET_LENGTH_LOG2-1:0]       resp_flit_counter_f;
reg  [MAX_PACKET_LENGTH_LOG2-1:0]       resp_flit_counter_next;
reg  [PARALLEL_TRANSACTIONS_LOG2-1:0]   resp_id_f;
reg  [PARALLEL_TRANSACTIONS_LOG2-1:0]   resp_id_next;
reg  [`NOC_DATA_WIDTH-1:0]              load_ack_hdr_plus_length;
reg  [`NOC_DATA_WIDTH-1:0]              resp_expected_data_2d[7:0];
reg                                     resp_data_matches;
reg                                     resp_data_err;

// Keep track of last inserted address and data
reg  [`PHY_ADDR_WIDTH-1:0]              last_inserted_address_f;
reg  [`PHY_ADDR_WIDTH-1:0]              last_inserted_address_next;
reg  [511:0]                            last_inserted_data_f;
reg  [511:0]                            last_inserted_data_next;

// Test address/data generator signals
reg                                     test_state_reset;

wire [`PHY_ADDR_WIDTH-1:0]              address_own_address_next;
wire [511:0]                            address_own_data_next;
wire                                    address_own_done;

wire                                    random_data_next_val; 
wire [`PHY_ADDR_WIDTH-1:0]              random_data_address_next;
wire [511:0]                            random_data_data_next;
wire                                    random_data_done;

// Multiplexed next address and data from generators
reg                                     gen_addrdata_next_rdy;
reg                                     gen_addrdata_next_val;
reg  [`PHY_ADDR_WIDTH-1:0]              gen_address_next;
reg  [511:0]                            gen_data_next;
reg                                     gen_done;

//////////////////////
// Sequential Logic //
//////////////////////

always @ (posedge clk)
begin
    if (~rst_n)
    begin
        test_state_f <= TEST_STATE_RESET;
        store_load_rr_f <= RR_STORE;

        test_valid_f <= {PARALLEL_TRANSACTIONS{1'b0}};
        test_store_f <= {PARALLEL_TRANSACTIONS{1'b0}};
        test_store_ack_f <= {PARALLEL_TRANSACTIONS{1'b0}};
        test_load_f <= {PARALLEL_TRANSACTIONS{1'b0}};
        test_load_ack_f <= {PARALLEL_TRANSACTIONS{1'b0}};

        flits_to_send_f <= {MAX_PACKET_LENGTH_LOG2{1'b0}};

        resp_flit_counter_f <= {MAX_PACKET_LENGTH_LOG2{1'b0}};
    end
    else
    begin
        test_state_f <= test_state_next;
        store_load_rr_f <= store_load_rr_next;

        test_valid_f <= test_valid_next;
        test_store_f <= test_store_next;
        test_store_ack_f <= test_store_ack_next;
        test_load_f <= test_load_next;
        test_load_ack_f <= test_load_ack_next;

        flits_to_send_f <= flits_to_send_next;

        resp_flit_counter_f <= resp_flit_counter_next;
    end

    test_address_f[first_invalid_id] <= test_address_next;
    test_data_f[first_invalid_id] <= test_data_next;

    flit_send_buffer_f[0] <= flit_send_buffer_next[0];
    flit_send_buffer_f[1] <= flit_send_buffer_next[1];
    flit_send_buffer_f[2] <= flit_send_buffer_next[2];
    flit_send_buffer_f[3] <= flit_send_buffer_next[3];
    flit_send_buffer_f[4] <= flit_send_buffer_next[4];
    flit_send_buffer_f[5] <= flit_send_buffer_next[5];
    flit_send_buffer_f[6] <= flit_send_buffer_next[6];
    flit_send_buffer_f[7] <= flit_send_buffer_next[7];
    flit_send_buffer_f[8] <= flit_send_buffer_next[8];
    flit_send_buffer_f[9] <= flit_send_buffer_next[9];
    flit_send_buffer_f[10] <= flit_send_buffer_next[10];


    resp_id_f <= resp_id_next;

    last_inserted_address_f <= last_inserted_address_next;
    last_inserted_data_f <= last_inserted_data_next;
end

/////////////////////////
// Combinational Logic //
/////////////////////////

always @ *
begin
    test_running = (test_state_f == TEST_STATE_RUN);
    test_passed = (test_state_f == TEST_STATE_PASS);
    test_timeout = timeout_trigger;
    test_done = test_state_f[1];
end

// We are always ready to receive when running (no buffering or stalling required)
always @ *
    mem_test_rdy = test_running;

always @ *
    test_state_reset = (test_state_f == TEST_STATE_RESET);

// Reset timeout when something is sent across link
always @ *
    timeout_rst_n = ~((test_mem_val & test_mem_rdy) | (mem_test_val & mem_test_rdy)) & rst_n;

always @ *
    gen_addrdata_next_rdy = (test_running && any_invalid);

// Multiplex test mode outputs
always @ *
begin
    case (test_mode_en)
        TEST_MODE_ADDRESS_OWN:
        begin
            gen_addrdata_next_val = 1'b1;
            gen_address_next = address_own_address_next;
            gen_data_next = address_own_data_next;
            gen_done = address_own_done;
        end
        TEST_MODE_RANDOM_DATA:
        begin
            gen_addrdata_next_val = random_data_next_val;
            gen_address_next = random_data_address_next;
            gen_data_next = random_data_data_next;
            gen_done = random_data_done;
        end
        default:
        begin
            gen_addrdata_next_val = 1'bx;
            gen_address_next = {`PHY_ADDR_WIDTH{1'bx}};
            gen_data_next = 512'bx;
            gen_done = 1'bx;
        end
    endcase
end

// High-level state machine
always @ *
begin
    test_state_next = test_state_f;

    case (test_state_f)
        TEST_STATE_RESET:
        begin
            if (en)
                test_state_next = TEST_STATE_RUN;
        end
        TEST_STATE_RUN:
        begin
            // Success condition
            if (gen_done && ~(|test_valid_f))
                test_state_next = TEST_STATE_PASS;     

            // Timeout case
            if (timeout_trigger)
                test_state_next = TEST_STATE_FAIL;

            // Data error case
            if (resp_data_err)
                test_state_next = TEST_STATE_FAIL;
        end
        TEST_STATE_PASS: ;
        TEST_STATE_FAIL: ;
        default:
            test_state_next = TEST_STATE_RESET;
    endcase
end

// MSHR priority encoders, figures out what needs to be
// done based on MSHRs control bits
always @ *
begin
    // Default values
    first_invalid_id = 0;
    first_valid_no_store_id = 0;
    first_valid_store_no_load_id = 0;
    first_complete_id = 0;

    // Find first invalid entry
    any_invalid = ~(&test_valid_f);
    if (~test_valid_f[0])
        first_invalid_id = 0;
    else if (~test_valid_f[1])
        first_invalid_id = 1;
    else if (~test_valid_f[2])
        first_invalid_id = 2;
    else if (~test_valid_f[3])
        first_invalid_id = 3;
    else if (~test_valid_f[4])
        first_invalid_id = 4;
    else if (~test_valid_f[5])
        first_invalid_id = 5;
    else if (~test_valid_f[6])
        first_invalid_id = 6;
    else if (~test_valid_f[7])
        first_invalid_id = 7;
    else if (~test_valid_f[8])
        first_invalid_id = 8;
    else if (~test_valid_f[9])
        first_invalid_id = 9;
    else if (~test_valid_f[10])
        first_invalid_id = 10;
    else if (~test_valid_f[11])
        first_invalid_id = 11;
    else if (~test_valid_f[12])
        first_invalid_id = 12;
    else if (~test_valid_f[13])
        first_invalid_id = 13;
    else if (~test_valid_f[14])
        first_invalid_id = 14;
    else if (~test_valid_f[15])
        first_invalid_id = 15;
    else if (~test_valid_f[16])
        first_invalid_id = 16;
    else if (~test_valid_f[17])
        first_invalid_id = 17;
    else if (~test_valid_f[18])
        first_invalid_id = 18;
    else if (~test_valid_f[19])
        first_invalid_id = 19;
    else if (~test_valid_f[20])
        first_invalid_id = 20;
    else if (~test_valid_f[21])
        first_invalid_id = 21;
    else if (~test_valid_f[22])
        first_invalid_id = 22;
    else if (~test_valid_f[23])
        first_invalid_id = 23;
    else if (~test_valid_f[24])
        first_invalid_id = 24;
    else if (~test_valid_f[25])
        first_invalid_id = 25;
    else if (~test_valid_f[26])
        first_invalid_id = 26;
    else if (~test_valid_f[27])
        first_invalid_id = 27;
    else if (~test_valid_f[28])
        first_invalid_id = 28;
    else if (~test_valid_f[29])
        first_invalid_id = 29;
    else if (~test_valid_f[30])
        first_invalid_id = 30;
    else if (~test_valid_f[31])
        first_invalid_id = 31;
    else if (~test_valid_f[32])
        first_invalid_id = 32;
    else if (~test_valid_f[33])
        first_invalid_id = 33;
    else if (~test_valid_f[34])
        first_invalid_id = 34;
    else if (~test_valid_f[35])
        first_invalid_id = 35;
    else if (~test_valid_f[36])
        first_invalid_id = 36;
    else if (~test_valid_f[37])
        first_invalid_id = 37;
    else if (~test_valid_f[38])
        first_invalid_id = 38;
    else if (~test_valid_f[39])
        first_invalid_id = 39;
    else if (~test_valid_f[40])
        first_invalid_id = 40;
    else if (~test_valid_f[41])
        first_invalid_id = 41;
    else if (~test_valid_f[42])
        first_invalid_id = 42;
    else if (~test_valid_f[43])
        first_invalid_id = 43;
    else if (~test_valid_f[44])
        first_invalid_id = 44;
    else if (~test_valid_f[45])
        first_invalid_id = 45;
    else if (~test_valid_f[46])
        first_invalid_id = 46;
    else if (~test_valid_f[47])
        first_invalid_id = 47;
    else if (~test_valid_f[48])
        first_invalid_id = 48;
    else if (~test_valid_f[49])
        first_invalid_id = 49;
    else if (~test_valid_f[50])
        first_invalid_id = 50;
    else if (~test_valid_f[51])
        first_invalid_id = 51;
    else if (~test_valid_f[52])
        first_invalid_id = 52;
    else if (~test_valid_f[53])
        first_invalid_id = 53;
    else if (~test_valid_f[54])
        first_invalid_id = 54;
    else if (~test_valid_f[55])
        first_invalid_id = 55;
    else if (~test_valid_f[56])
        first_invalid_id = 56;
    else if (~test_valid_f[57])
        first_invalid_id = 57;
    else if (~test_valid_f[58])
        first_invalid_id = 58;
    else if (~test_valid_f[59])
        first_invalid_id = 59;
    else if (~test_valid_f[60])
        first_invalid_id = 60;
    else if (~test_valid_f[61])
        first_invalid_id = 61;
    else if (~test_valid_f[62])
        first_invalid_id = 62;
    else if (~test_valid_f[63])
        first_invalid_id = 63;
    else if (~test_valid_f[64])
        first_invalid_id = 64;
    else if (~test_valid_f[65])
        first_invalid_id = 65;
    else if (~test_valid_f[66])
        first_invalid_id = 66;
    else if (~test_valid_f[67])
        first_invalid_id = 67;
    else if (~test_valid_f[68])
        first_invalid_id = 68;
    else if (~test_valid_f[69])
        first_invalid_id = 69;
    else if (~test_valid_f[70])
        first_invalid_id = 70;
    else if (~test_valid_f[71])
        first_invalid_id = 71;
    else if (~test_valid_f[72])
        first_invalid_id = 72;
    else if (~test_valid_f[73])
        first_invalid_id = 73;
    else if (~test_valid_f[74])
        first_invalid_id = 74;
    else if (~test_valid_f[75])
        first_invalid_id = 75;
    else if (~test_valid_f[76])
        first_invalid_id = 76;
    else if (~test_valid_f[77])
        first_invalid_id = 77;
    else if (~test_valid_f[78])
        first_invalid_id = 78;
    else if (~test_valid_f[79])
        first_invalid_id = 79;
    else if (~test_valid_f[80])
        first_invalid_id = 80;
    else if (~test_valid_f[81])
        first_invalid_id = 81;
    else if (~test_valid_f[82])
        first_invalid_id = 82;
    else if (~test_valid_f[83])
        first_invalid_id = 83;
    else if (~test_valid_f[84])
        first_invalid_id = 84;
    else if (~test_valid_f[85])
        first_invalid_id = 85;
    else if (~test_valid_f[86])
        first_invalid_id = 86;
    else if (~test_valid_f[87])
        first_invalid_id = 87;
    else if (~test_valid_f[88])
        first_invalid_id = 88;
    else if (~test_valid_f[89])
        first_invalid_id = 89;
    else if (~test_valid_f[90])
        first_invalid_id = 90;
    else if (~test_valid_f[91])
        first_invalid_id = 91;
    else if (~test_valid_f[92])
        first_invalid_id = 92;
    else if (~test_valid_f[93])
        first_invalid_id = 93;
    else if (~test_valid_f[94])
        first_invalid_id = 94;
    else if (~test_valid_f[95])
        first_invalid_id = 95;
    else if (~test_valid_f[96])
        first_invalid_id = 96;
    else if (~test_valid_f[97])
        first_invalid_id = 97;
    else if (~test_valid_f[98])
        first_invalid_id = 98;
    else if (~test_valid_f[99])
        first_invalid_id = 99;
    else if (~test_valid_f[100])
        first_invalid_id = 100;
    else if (~test_valid_f[101])
        first_invalid_id = 101;
    else if (~test_valid_f[102])
        first_invalid_id = 102;
    else if (~test_valid_f[103])
        first_invalid_id = 103;
    else if (~test_valid_f[104])
        first_invalid_id = 104;
    else if (~test_valid_f[105])
        first_invalid_id = 105;
    else if (~test_valid_f[106])
        first_invalid_id = 106;
    else if (~test_valid_f[107])
        first_invalid_id = 107;
    else if (~test_valid_f[108])
        first_invalid_id = 108;
    else if (~test_valid_f[109])
        first_invalid_id = 109;
    else if (~test_valid_f[110])
        first_invalid_id = 110;
    else if (~test_valid_f[111])
        first_invalid_id = 111;
    else if (~test_valid_f[112])
        first_invalid_id = 112;
    else if (~test_valid_f[113])
        first_invalid_id = 113;
    else if (~test_valid_f[114])
        first_invalid_id = 114;
    else if (~test_valid_f[115])
        first_invalid_id = 115;
    else if (~test_valid_f[116])
        first_invalid_id = 116;
    else if (~test_valid_f[117])
        first_invalid_id = 117;
    else if (~test_valid_f[118])
        first_invalid_id = 118;
    else if (~test_valid_f[119])
        first_invalid_id = 119;
    else if (~test_valid_f[120])
        first_invalid_id = 120;
    else if (~test_valid_f[121])
        first_invalid_id = 121;
    else if (~test_valid_f[122])
        first_invalid_id = 122;
    else if (~test_valid_f[123])
        first_invalid_id = 123;
    else if (~test_valid_f[124])
        first_invalid_id = 124;
    else if (~test_valid_f[125])
        first_invalid_id = 125;
    else if (~test_valid_f[126])
        first_invalid_id = 126;
    else if (~test_valid_f[127])
        first_invalid_id = 127;
    else if (~test_valid_f[128])
        first_invalid_id = 128;
    else if (~test_valid_f[129])
        first_invalid_id = 129;
    else if (~test_valid_f[130])
        first_invalid_id = 130;
    else if (~test_valid_f[131])
        first_invalid_id = 131;
    else if (~test_valid_f[132])
        first_invalid_id = 132;
    else if (~test_valid_f[133])
        first_invalid_id = 133;
    else if (~test_valid_f[134])
        first_invalid_id = 134;
    else if (~test_valid_f[135])
        first_invalid_id = 135;
    else if (~test_valid_f[136])
        first_invalid_id = 136;
    else if (~test_valid_f[137])
        first_invalid_id = 137;
    else if (~test_valid_f[138])
        first_invalid_id = 138;
    else if (~test_valid_f[139])
        first_invalid_id = 139;
    else if (~test_valid_f[140])
        first_invalid_id = 140;
    else if (~test_valid_f[141])
        first_invalid_id = 141;
    else if (~test_valid_f[142])
        first_invalid_id = 142;
    else if (~test_valid_f[143])
        first_invalid_id = 143;
    else if (~test_valid_f[144])
        first_invalid_id = 144;
    else if (~test_valid_f[145])
        first_invalid_id = 145;
    else if (~test_valid_f[146])
        first_invalid_id = 146;
    else if (~test_valid_f[147])
        first_invalid_id = 147;
    else if (~test_valid_f[148])
        first_invalid_id = 148;
    else if (~test_valid_f[149])
        first_invalid_id = 149;
    else if (~test_valid_f[150])
        first_invalid_id = 150;
    else if (~test_valid_f[151])
        first_invalid_id = 151;
    else if (~test_valid_f[152])
        first_invalid_id = 152;
    else if (~test_valid_f[153])
        first_invalid_id = 153;
    else if (~test_valid_f[154])
        first_invalid_id = 154;
    else if (~test_valid_f[155])
        first_invalid_id = 155;
    else if (~test_valid_f[156])
        first_invalid_id = 156;
    else if (~test_valid_f[157])
        first_invalid_id = 157;
    else if (~test_valid_f[158])
        first_invalid_id = 158;
    else if (~test_valid_f[159])
        first_invalid_id = 159;
    else if (~test_valid_f[160])
        first_invalid_id = 160;
    else if (~test_valid_f[161])
        first_invalid_id = 161;
    else if (~test_valid_f[162])
        first_invalid_id = 162;
    else if (~test_valid_f[163])
        first_invalid_id = 163;
    else if (~test_valid_f[164])
        first_invalid_id = 164;
    else if (~test_valid_f[165])
        first_invalid_id = 165;
    else if (~test_valid_f[166])
        first_invalid_id = 166;
    else if (~test_valid_f[167])
        first_invalid_id = 167;
    else if (~test_valid_f[168])
        first_invalid_id = 168;
    else if (~test_valid_f[169])
        first_invalid_id = 169;
    else if (~test_valid_f[170])
        first_invalid_id = 170;
    else if (~test_valid_f[171])
        first_invalid_id = 171;
    else if (~test_valid_f[172])
        first_invalid_id = 172;
    else if (~test_valid_f[173])
        first_invalid_id = 173;
    else if (~test_valid_f[174])
        first_invalid_id = 174;
    else if (~test_valid_f[175])
        first_invalid_id = 175;
    else if (~test_valid_f[176])
        first_invalid_id = 176;
    else if (~test_valid_f[177])
        first_invalid_id = 177;
    else if (~test_valid_f[178])
        first_invalid_id = 178;
    else if (~test_valid_f[179])
        first_invalid_id = 179;
    else if (~test_valid_f[180])
        first_invalid_id = 180;
    else if (~test_valid_f[181])
        first_invalid_id = 181;
    else if (~test_valid_f[182])
        first_invalid_id = 182;
    else if (~test_valid_f[183])
        first_invalid_id = 183;
    else if (~test_valid_f[184])
        first_invalid_id = 184;
    else if (~test_valid_f[185])
        first_invalid_id = 185;
    else if (~test_valid_f[186])
        first_invalid_id = 186;
    else if (~test_valid_f[187])
        first_invalid_id = 187;
    else if (~test_valid_f[188])
        first_invalid_id = 188;
    else if (~test_valid_f[189])
        first_invalid_id = 189;
    else if (~test_valid_f[190])
        first_invalid_id = 190;
    else if (~test_valid_f[191])
        first_invalid_id = 191;
    else if (~test_valid_f[192])
        first_invalid_id = 192;
    else if (~test_valid_f[193])
        first_invalid_id = 193;
    else if (~test_valid_f[194])
        first_invalid_id = 194;
    else if (~test_valid_f[195])
        first_invalid_id = 195;
    else if (~test_valid_f[196])
        first_invalid_id = 196;
    else if (~test_valid_f[197])
        first_invalid_id = 197;
    else if (~test_valid_f[198])
        first_invalid_id = 198;
    else if (~test_valid_f[199])
        first_invalid_id = 199;
    else if (~test_valid_f[200])
        first_invalid_id = 200;
    else if (~test_valid_f[201])
        first_invalid_id = 201;
    else if (~test_valid_f[202])
        first_invalid_id = 202;
    else if (~test_valid_f[203])
        first_invalid_id = 203;
    else if (~test_valid_f[204])
        first_invalid_id = 204;
    else if (~test_valid_f[205])
        first_invalid_id = 205;
    else if (~test_valid_f[206])
        first_invalid_id = 206;
    else if (~test_valid_f[207])
        first_invalid_id = 207;
    else if (~test_valid_f[208])
        first_invalid_id = 208;
    else if (~test_valid_f[209])
        first_invalid_id = 209;
    else if (~test_valid_f[210])
        first_invalid_id = 210;
    else if (~test_valid_f[211])
        first_invalid_id = 211;
    else if (~test_valid_f[212])
        first_invalid_id = 212;
    else if (~test_valid_f[213])
        first_invalid_id = 213;
    else if (~test_valid_f[214])
        first_invalid_id = 214;
    else if (~test_valid_f[215])
        first_invalid_id = 215;
    else if (~test_valid_f[216])
        first_invalid_id = 216;
    else if (~test_valid_f[217])
        first_invalid_id = 217;
    else if (~test_valid_f[218])
        first_invalid_id = 218;
    else if (~test_valid_f[219])
        first_invalid_id = 219;
    else if (~test_valid_f[220])
        first_invalid_id = 220;
    else if (~test_valid_f[221])
        first_invalid_id = 221;
    else if (~test_valid_f[222])
        first_invalid_id = 222;
    else if (~test_valid_f[223])
        first_invalid_id = 223;
    else if (~test_valid_f[224])
        first_invalid_id = 224;
    else if (~test_valid_f[225])
        first_invalid_id = 225;
    else if (~test_valid_f[226])
        first_invalid_id = 226;
    else if (~test_valid_f[227])
        first_invalid_id = 227;
    else if (~test_valid_f[228])
        first_invalid_id = 228;
    else if (~test_valid_f[229])
        first_invalid_id = 229;
    else if (~test_valid_f[230])
        first_invalid_id = 230;
    else if (~test_valid_f[231])
        first_invalid_id = 231;
    else if (~test_valid_f[232])
        first_invalid_id = 232;
    else if (~test_valid_f[233])
        first_invalid_id = 233;
    else if (~test_valid_f[234])
        first_invalid_id = 234;
    else if (~test_valid_f[235])
        first_invalid_id = 235;
    else if (~test_valid_f[236])
        first_invalid_id = 236;
    else if (~test_valid_f[237])
        first_invalid_id = 237;
    else if (~test_valid_f[238])
        first_invalid_id = 238;
    else if (~test_valid_f[239])
        first_invalid_id = 239;
    else if (~test_valid_f[240])
        first_invalid_id = 240;
    else if (~test_valid_f[241])
        first_invalid_id = 241;
    else if (~test_valid_f[242])
        first_invalid_id = 242;
    else if (~test_valid_f[243])
        first_invalid_id = 243;
    else if (~test_valid_f[244])
        first_invalid_id = 244;
    else if (~test_valid_f[245])
        first_invalid_id = 245;
    else if (~test_valid_f[246])
        first_invalid_id = 246;
    else if (~test_valid_f[247])
        first_invalid_id = 247;
    else if (~test_valid_f[248])
        first_invalid_id = 248;
    else if (~test_valid_f[249])
        first_invalid_id = 249;
    else if (~test_valid_f[250])
        first_invalid_id = 250;
    else if (~test_valid_f[251])
        first_invalid_id = 251;
    else if (~test_valid_f[252])
        first_invalid_id = 252;
    else if (~test_valid_f[253])
        first_invalid_id = 253;
    else if (~test_valid_f[254])
        first_invalid_id = 254;
    else if (~test_valid_f[255])
        first_invalid_id = 255;


    // Find first valid entry without a store already sent
    any_valid_no_store = |(test_valid_f & ~test_store_f);
    if (test_valid_f[0] & ~test_store_f[0])
        first_valid_no_store_id = 0;
    else if (test_valid_f[1] & ~test_store_f[1])
        first_valid_no_store_id = 1;
    else if (test_valid_f[2] & ~test_store_f[2])
        first_valid_no_store_id = 2;
    else if (test_valid_f[3] & ~test_store_f[3])
        first_valid_no_store_id = 3;
    else if (test_valid_f[4] & ~test_store_f[4])
        first_valid_no_store_id = 4;
    else if (test_valid_f[5] & ~test_store_f[5])
        first_valid_no_store_id = 5;
    else if (test_valid_f[6] & ~test_store_f[6])
        first_valid_no_store_id = 6;
    else if (test_valid_f[7] & ~test_store_f[7])
        first_valid_no_store_id = 7;
    else if (test_valid_f[8] & ~test_store_f[8])
        first_valid_no_store_id = 8;
    else if (test_valid_f[9] & ~test_store_f[9])
        first_valid_no_store_id = 9;
    else if (test_valid_f[10] & ~test_store_f[10])
        first_valid_no_store_id = 10;
    else if (test_valid_f[11] & ~test_store_f[11])
        first_valid_no_store_id = 11;
    else if (test_valid_f[12] & ~test_store_f[12])
        first_valid_no_store_id = 12;
    else if (test_valid_f[13] & ~test_store_f[13])
        first_valid_no_store_id = 13;
    else if (test_valid_f[14] & ~test_store_f[14])
        first_valid_no_store_id = 14;
    else if (test_valid_f[15] & ~test_store_f[15])
        first_valid_no_store_id = 15;
    else if (test_valid_f[16] & ~test_store_f[16])
        first_valid_no_store_id = 16;
    else if (test_valid_f[17] & ~test_store_f[17])
        first_valid_no_store_id = 17;
    else if (test_valid_f[18] & ~test_store_f[18])
        first_valid_no_store_id = 18;
    else if (test_valid_f[19] & ~test_store_f[19])
        first_valid_no_store_id = 19;
    else if (test_valid_f[20] & ~test_store_f[20])
        first_valid_no_store_id = 20;
    else if (test_valid_f[21] & ~test_store_f[21])
        first_valid_no_store_id = 21;
    else if (test_valid_f[22] & ~test_store_f[22])
        first_valid_no_store_id = 22;
    else if (test_valid_f[23] & ~test_store_f[23])
        first_valid_no_store_id = 23;
    else if (test_valid_f[24] & ~test_store_f[24])
        first_valid_no_store_id = 24;
    else if (test_valid_f[25] & ~test_store_f[25])
        first_valid_no_store_id = 25;
    else if (test_valid_f[26] & ~test_store_f[26])
        first_valid_no_store_id = 26;
    else if (test_valid_f[27] & ~test_store_f[27])
        first_valid_no_store_id = 27;
    else if (test_valid_f[28] & ~test_store_f[28])
        first_valid_no_store_id = 28;
    else if (test_valid_f[29] & ~test_store_f[29])
        first_valid_no_store_id = 29;
    else if (test_valid_f[30] & ~test_store_f[30])
        first_valid_no_store_id = 30;
    else if (test_valid_f[31] & ~test_store_f[31])
        first_valid_no_store_id = 31;
    else if (test_valid_f[32] & ~test_store_f[32])
        first_valid_no_store_id = 32;
    else if (test_valid_f[33] & ~test_store_f[33])
        first_valid_no_store_id = 33;
    else if (test_valid_f[34] & ~test_store_f[34])
        first_valid_no_store_id = 34;
    else if (test_valid_f[35] & ~test_store_f[35])
        first_valid_no_store_id = 35;
    else if (test_valid_f[36] & ~test_store_f[36])
        first_valid_no_store_id = 36;
    else if (test_valid_f[37] & ~test_store_f[37])
        first_valid_no_store_id = 37;
    else if (test_valid_f[38] & ~test_store_f[38])
        first_valid_no_store_id = 38;
    else if (test_valid_f[39] & ~test_store_f[39])
        first_valid_no_store_id = 39;
    else if (test_valid_f[40] & ~test_store_f[40])
        first_valid_no_store_id = 40;
    else if (test_valid_f[41] & ~test_store_f[41])
        first_valid_no_store_id = 41;
    else if (test_valid_f[42] & ~test_store_f[42])
        first_valid_no_store_id = 42;
    else if (test_valid_f[43] & ~test_store_f[43])
        first_valid_no_store_id = 43;
    else if (test_valid_f[44] & ~test_store_f[44])
        first_valid_no_store_id = 44;
    else if (test_valid_f[45] & ~test_store_f[45])
        first_valid_no_store_id = 45;
    else if (test_valid_f[46] & ~test_store_f[46])
        first_valid_no_store_id = 46;
    else if (test_valid_f[47] & ~test_store_f[47])
        first_valid_no_store_id = 47;
    else if (test_valid_f[48] & ~test_store_f[48])
        first_valid_no_store_id = 48;
    else if (test_valid_f[49] & ~test_store_f[49])
        first_valid_no_store_id = 49;
    else if (test_valid_f[50] & ~test_store_f[50])
        first_valid_no_store_id = 50;
    else if (test_valid_f[51] & ~test_store_f[51])
        first_valid_no_store_id = 51;
    else if (test_valid_f[52] & ~test_store_f[52])
        first_valid_no_store_id = 52;
    else if (test_valid_f[53] & ~test_store_f[53])
        first_valid_no_store_id = 53;
    else if (test_valid_f[54] & ~test_store_f[54])
        first_valid_no_store_id = 54;
    else if (test_valid_f[55] & ~test_store_f[55])
        first_valid_no_store_id = 55;
    else if (test_valid_f[56] & ~test_store_f[56])
        first_valid_no_store_id = 56;
    else if (test_valid_f[57] & ~test_store_f[57])
        first_valid_no_store_id = 57;
    else if (test_valid_f[58] & ~test_store_f[58])
        first_valid_no_store_id = 58;
    else if (test_valid_f[59] & ~test_store_f[59])
        first_valid_no_store_id = 59;
    else if (test_valid_f[60] & ~test_store_f[60])
        first_valid_no_store_id = 60;
    else if (test_valid_f[61] & ~test_store_f[61])
        first_valid_no_store_id = 61;
    else if (test_valid_f[62] & ~test_store_f[62])
        first_valid_no_store_id = 62;
    else if (test_valid_f[63] & ~test_store_f[63])
        first_valid_no_store_id = 63;
    else if (test_valid_f[64] & ~test_store_f[64])
        first_valid_no_store_id = 64;
    else if (test_valid_f[65] & ~test_store_f[65])
        first_valid_no_store_id = 65;
    else if (test_valid_f[66] & ~test_store_f[66])
        first_valid_no_store_id = 66;
    else if (test_valid_f[67] & ~test_store_f[67])
        first_valid_no_store_id = 67;
    else if (test_valid_f[68] & ~test_store_f[68])
        first_valid_no_store_id = 68;
    else if (test_valid_f[69] & ~test_store_f[69])
        first_valid_no_store_id = 69;
    else if (test_valid_f[70] & ~test_store_f[70])
        first_valid_no_store_id = 70;
    else if (test_valid_f[71] & ~test_store_f[71])
        first_valid_no_store_id = 71;
    else if (test_valid_f[72] & ~test_store_f[72])
        first_valid_no_store_id = 72;
    else if (test_valid_f[73] & ~test_store_f[73])
        first_valid_no_store_id = 73;
    else if (test_valid_f[74] & ~test_store_f[74])
        first_valid_no_store_id = 74;
    else if (test_valid_f[75] & ~test_store_f[75])
        first_valid_no_store_id = 75;
    else if (test_valid_f[76] & ~test_store_f[76])
        first_valid_no_store_id = 76;
    else if (test_valid_f[77] & ~test_store_f[77])
        first_valid_no_store_id = 77;
    else if (test_valid_f[78] & ~test_store_f[78])
        first_valid_no_store_id = 78;
    else if (test_valid_f[79] & ~test_store_f[79])
        first_valid_no_store_id = 79;
    else if (test_valid_f[80] & ~test_store_f[80])
        first_valid_no_store_id = 80;
    else if (test_valid_f[81] & ~test_store_f[81])
        first_valid_no_store_id = 81;
    else if (test_valid_f[82] & ~test_store_f[82])
        first_valid_no_store_id = 82;
    else if (test_valid_f[83] & ~test_store_f[83])
        first_valid_no_store_id = 83;
    else if (test_valid_f[84] & ~test_store_f[84])
        first_valid_no_store_id = 84;
    else if (test_valid_f[85] & ~test_store_f[85])
        first_valid_no_store_id = 85;
    else if (test_valid_f[86] & ~test_store_f[86])
        first_valid_no_store_id = 86;
    else if (test_valid_f[87] & ~test_store_f[87])
        first_valid_no_store_id = 87;
    else if (test_valid_f[88] & ~test_store_f[88])
        first_valid_no_store_id = 88;
    else if (test_valid_f[89] & ~test_store_f[89])
        first_valid_no_store_id = 89;
    else if (test_valid_f[90] & ~test_store_f[90])
        first_valid_no_store_id = 90;
    else if (test_valid_f[91] & ~test_store_f[91])
        first_valid_no_store_id = 91;
    else if (test_valid_f[92] & ~test_store_f[92])
        first_valid_no_store_id = 92;
    else if (test_valid_f[93] & ~test_store_f[93])
        first_valid_no_store_id = 93;
    else if (test_valid_f[94] & ~test_store_f[94])
        first_valid_no_store_id = 94;
    else if (test_valid_f[95] & ~test_store_f[95])
        first_valid_no_store_id = 95;
    else if (test_valid_f[96] & ~test_store_f[96])
        first_valid_no_store_id = 96;
    else if (test_valid_f[97] & ~test_store_f[97])
        first_valid_no_store_id = 97;
    else if (test_valid_f[98] & ~test_store_f[98])
        first_valid_no_store_id = 98;
    else if (test_valid_f[99] & ~test_store_f[99])
        first_valid_no_store_id = 99;
    else if (test_valid_f[100] & ~test_store_f[100])
        first_valid_no_store_id = 100;
    else if (test_valid_f[101] & ~test_store_f[101])
        first_valid_no_store_id = 101;
    else if (test_valid_f[102] & ~test_store_f[102])
        first_valid_no_store_id = 102;
    else if (test_valid_f[103] & ~test_store_f[103])
        first_valid_no_store_id = 103;
    else if (test_valid_f[104] & ~test_store_f[104])
        first_valid_no_store_id = 104;
    else if (test_valid_f[105] & ~test_store_f[105])
        first_valid_no_store_id = 105;
    else if (test_valid_f[106] & ~test_store_f[106])
        first_valid_no_store_id = 106;
    else if (test_valid_f[107] & ~test_store_f[107])
        first_valid_no_store_id = 107;
    else if (test_valid_f[108] & ~test_store_f[108])
        first_valid_no_store_id = 108;
    else if (test_valid_f[109] & ~test_store_f[109])
        first_valid_no_store_id = 109;
    else if (test_valid_f[110] & ~test_store_f[110])
        first_valid_no_store_id = 110;
    else if (test_valid_f[111] & ~test_store_f[111])
        first_valid_no_store_id = 111;
    else if (test_valid_f[112] & ~test_store_f[112])
        first_valid_no_store_id = 112;
    else if (test_valid_f[113] & ~test_store_f[113])
        first_valid_no_store_id = 113;
    else if (test_valid_f[114] & ~test_store_f[114])
        first_valid_no_store_id = 114;
    else if (test_valid_f[115] & ~test_store_f[115])
        first_valid_no_store_id = 115;
    else if (test_valid_f[116] & ~test_store_f[116])
        first_valid_no_store_id = 116;
    else if (test_valid_f[117] & ~test_store_f[117])
        first_valid_no_store_id = 117;
    else if (test_valid_f[118] & ~test_store_f[118])
        first_valid_no_store_id = 118;
    else if (test_valid_f[119] & ~test_store_f[119])
        first_valid_no_store_id = 119;
    else if (test_valid_f[120] & ~test_store_f[120])
        first_valid_no_store_id = 120;
    else if (test_valid_f[121] & ~test_store_f[121])
        first_valid_no_store_id = 121;
    else if (test_valid_f[122] & ~test_store_f[122])
        first_valid_no_store_id = 122;
    else if (test_valid_f[123] & ~test_store_f[123])
        first_valid_no_store_id = 123;
    else if (test_valid_f[124] & ~test_store_f[124])
        first_valid_no_store_id = 124;
    else if (test_valid_f[125] & ~test_store_f[125])
        first_valid_no_store_id = 125;
    else if (test_valid_f[126] & ~test_store_f[126])
        first_valid_no_store_id = 126;
    else if (test_valid_f[127] & ~test_store_f[127])
        first_valid_no_store_id = 127;
    else if (test_valid_f[128] & ~test_store_f[128])
        first_valid_no_store_id = 128;
    else if (test_valid_f[129] & ~test_store_f[129])
        first_valid_no_store_id = 129;
    else if (test_valid_f[130] & ~test_store_f[130])
        first_valid_no_store_id = 130;
    else if (test_valid_f[131] & ~test_store_f[131])
        first_valid_no_store_id = 131;
    else if (test_valid_f[132] & ~test_store_f[132])
        first_valid_no_store_id = 132;
    else if (test_valid_f[133] & ~test_store_f[133])
        first_valid_no_store_id = 133;
    else if (test_valid_f[134] & ~test_store_f[134])
        first_valid_no_store_id = 134;
    else if (test_valid_f[135] & ~test_store_f[135])
        first_valid_no_store_id = 135;
    else if (test_valid_f[136] & ~test_store_f[136])
        first_valid_no_store_id = 136;
    else if (test_valid_f[137] & ~test_store_f[137])
        first_valid_no_store_id = 137;
    else if (test_valid_f[138] & ~test_store_f[138])
        first_valid_no_store_id = 138;
    else if (test_valid_f[139] & ~test_store_f[139])
        first_valid_no_store_id = 139;
    else if (test_valid_f[140] & ~test_store_f[140])
        first_valid_no_store_id = 140;
    else if (test_valid_f[141] & ~test_store_f[141])
        first_valid_no_store_id = 141;
    else if (test_valid_f[142] & ~test_store_f[142])
        first_valid_no_store_id = 142;
    else if (test_valid_f[143] & ~test_store_f[143])
        first_valid_no_store_id = 143;
    else if (test_valid_f[144] & ~test_store_f[144])
        first_valid_no_store_id = 144;
    else if (test_valid_f[145] & ~test_store_f[145])
        first_valid_no_store_id = 145;
    else if (test_valid_f[146] & ~test_store_f[146])
        first_valid_no_store_id = 146;
    else if (test_valid_f[147] & ~test_store_f[147])
        first_valid_no_store_id = 147;
    else if (test_valid_f[148] & ~test_store_f[148])
        first_valid_no_store_id = 148;
    else if (test_valid_f[149] & ~test_store_f[149])
        first_valid_no_store_id = 149;
    else if (test_valid_f[150] & ~test_store_f[150])
        first_valid_no_store_id = 150;
    else if (test_valid_f[151] & ~test_store_f[151])
        first_valid_no_store_id = 151;
    else if (test_valid_f[152] & ~test_store_f[152])
        first_valid_no_store_id = 152;
    else if (test_valid_f[153] & ~test_store_f[153])
        first_valid_no_store_id = 153;
    else if (test_valid_f[154] & ~test_store_f[154])
        first_valid_no_store_id = 154;
    else if (test_valid_f[155] & ~test_store_f[155])
        first_valid_no_store_id = 155;
    else if (test_valid_f[156] & ~test_store_f[156])
        first_valid_no_store_id = 156;
    else if (test_valid_f[157] & ~test_store_f[157])
        first_valid_no_store_id = 157;
    else if (test_valid_f[158] & ~test_store_f[158])
        first_valid_no_store_id = 158;
    else if (test_valid_f[159] & ~test_store_f[159])
        first_valid_no_store_id = 159;
    else if (test_valid_f[160] & ~test_store_f[160])
        first_valid_no_store_id = 160;
    else if (test_valid_f[161] & ~test_store_f[161])
        first_valid_no_store_id = 161;
    else if (test_valid_f[162] & ~test_store_f[162])
        first_valid_no_store_id = 162;
    else if (test_valid_f[163] & ~test_store_f[163])
        first_valid_no_store_id = 163;
    else if (test_valid_f[164] & ~test_store_f[164])
        first_valid_no_store_id = 164;
    else if (test_valid_f[165] & ~test_store_f[165])
        first_valid_no_store_id = 165;
    else if (test_valid_f[166] & ~test_store_f[166])
        first_valid_no_store_id = 166;
    else if (test_valid_f[167] & ~test_store_f[167])
        first_valid_no_store_id = 167;
    else if (test_valid_f[168] & ~test_store_f[168])
        first_valid_no_store_id = 168;
    else if (test_valid_f[169] & ~test_store_f[169])
        first_valid_no_store_id = 169;
    else if (test_valid_f[170] & ~test_store_f[170])
        first_valid_no_store_id = 170;
    else if (test_valid_f[171] & ~test_store_f[171])
        first_valid_no_store_id = 171;
    else if (test_valid_f[172] & ~test_store_f[172])
        first_valid_no_store_id = 172;
    else if (test_valid_f[173] & ~test_store_f[173])
        first_valid_no_store_id = 173;
    else if (test_valid_f[174] & ~test_store_f[174])
        first_valid_no_store_id = 174;
    else if (test_valid_f[175] & ~test_store_f[175])
        first_valid_no_store_id = 175;
    else if (test_valid_f[176] & ~test_store_f[176])
        first_valid_no_store_id = 176;
    else if (test_valid_f[177] & ~test_store_f[177])
        first_valid_no_store_id = 177;
    else if (test_valid_f[178] & ~test_store_f[178])
        first_valid_no_store_id = 178;
    else if (test_valid_f[179] & ~test_store_f[179])
        first_valid_no_store_id = 179;
    else if (test_valid_f[180] & ~test_store_f[180])
        first_valid_no_store_id = 180;
    else if (test_valid_f[181] & ~test_store_f[181])
        first_valid_no_store_id = 181;
    else if (test_valid_f[182] & ~test_store_f[182])
        first_valid_no_store_id = 182;
    else if (test_valid_f[183] & ~test_store_f[183])
        first_valid_no_store_id = 183;
    else if (test_valid_f[184] & ~test_store_f[184])
        first_valid_no_store_id = 184;
    else if (test_valid_f[185] & ~test_store_f[185])
        first_valid_no_store_id = 185;
    else if (test_valid_f[186] & ~test_store_f[186])
        first_valid_no_store_id = 186;
    else if (test_valid_f[187] & ~test_store_f[187])
        first_valid_no_store_id = 187;
    else if (test_valid_f[188] & ~test_store_f[188])
        first_valid_no_store_id = 188;
    else if (test_valid_f[189] & ~test_store_f[189])
        first_valid_no_store_id = 189;
    else if (test_valid_f[190] & ~test_store_f[190])
        first_valid_no_store_id = 190;
    else if (test_valid_f[191] & ~test_store_f[191])
        first_valid_no_store_id = 191;
    else if (test_valid_f[192] & ~test_store_f[192])
        first_valid_no_store_id = 192;
    else if (test_valid_f[193] & ~test_store_f[193])
        first_valid_no_store_id = 193;
    else if (test_valid_f[194] & ~test_store_f[194])
        first_valid_no_store_id = 194;
    else if (test_valid_f[195] & ~test_store_f[195])
        first_valid_no_store_id = 195;
    else if (test_valid_f[196] & ~test_store_f[196])
        first_valid_no_store_id = 196;
    else if (test_valid_f[197] & ~test_store_f[197])
        first_valid_no_store_id = 197;
    else if (test_valid_f[198] & ~test_store_f[198])
        first_valid_no_store_id = 198;
    else if (test_valid_f[199] & ~test_store_f[199])
        first_valid_no_store_id = 199;
    else if (test_valid_f[200] & ~test_store_f[200])
        first_valid_no_store_id = 200;
    else if (test_valid_f[201] & ~test_store_f[201])
        first_valid_no_store_id = 201;
    else if (test_valid_f[202] & ~test_store_f[202])
        first_valid_no_store_id = 202;
    else if (test_valid_f[203] & ~test_store_f[203])
        first_valid_no_store_id = 203;
    else if (test_valid_f[204] & ~test_store_f[204])
        first_valid_no_store_id = 204;
    else if (test_valid_f[205] & ~test_store_f[205])
        first_valid_no_store_id = 205;
    else if (test_valid_f[206] & ~test_store_f[206])
        first_valid_no_store_id = 206;
    else if (test_valid_f[207] & ~test_store_f[207])
        first_valid_no_store_id = 207;
    else if (test_valid_f[208] & ~test_store_f[208])
        first_valid_no_store_id = 208;
    else if (test_valid_f[209] & ~test_store_f[209])
        first_valid_no_store_id = 209;
    else if (test_valid_f[210] & ~test_store_f[210])
        first_valid_no_store_id = 210;
    else if (test_valid_f[211] & ~test_store_f[211])
        first_valid_no_store_id = 211;
    else if (test_valid_f[212] & ~test_store_f[212])
        first_valid_no_store_id = 212;
    else if (test_valid_f[213] & ~test_store_f[213])
        first_valid_no_store_id = 213;
    else if (test_valid_f[214] & ~test_store_f[214])
        first_valid_no_store_id = 214;
    else if (test_valid_f[215] & ~test_store_f[215])
        first_valid_no_store_id = 215;
    else if (test_valid_f[216] & ~test_store_f[216])
        first_valid_no_store_id = 216;
    else if (test_valid_f[217] & ~test_store_f[217])
        first_valid_no_store_id = 217;
    else if (test_valid_f[218] & ~test_store_f[218])
        first_valid_no_store_id = 218;
    else if (test_valid_f[219] & ~test_store_f[219])
        first_valid_no_store_id = 219;
    else if (test_valid_f[220] & ~test_store_f[220])
        first_valid_no_store_id = 220;
    else if (test_valid_f[221] & ~test_store_f[221])
        first_valid_no_store_id = 221;
    else if (test_valid_f[222] & ~test_store_f[222])
        first_valid_no_store_id = 222;
    else if (test_valid_f[223] & ~test_store_f[223])
        first_valid_no_store_id = 223;
    else if (test_valid_f[224] & ~test_store_f[224])
        first_valid_no_store_id = 224;
    else if (test_valid_f[225] & ~test_store_f[225])
        first_valid_no_store_id = 225;
    else if (test_valid_f[226] & ~test_store_f[226])
        first_valid_no_store_id = 226;
    else if (test_valid_f[227] & ~test_store_f[227])
        first_valid_no_store_id = 227;
    else if (test_valid_f[228] & ~test_store_f[228])
        first_valid_no_store_id = 228;
    else if (test_valid_f[229] & ~test_store_f[229])
        first_valid_no_store_id = 229;
    else if (test_valid_f[230] & ~test_store_f[230])
        first_valid_no_store_id = 230;
    else if (test_valid_f[231] & ~test_store_f[231])
        first_valid_no_store_id = 231;
    else if (test_valid_f[232] & ~test_store_f[232])
        first_valid_no_store_id = 232;
    else if (test_valid_f[233] & ~test_store_f[233])
        first_valid_no_store_id = 233;
    else if (test_valid_f[234] & ~test_store_f[234])
        first_valid_no_store_id = 234;
    else if (test_valid_f[235] & ~test_store_f[235])
        first_valid_no_store_id = 235;
    else if (test_valid_f[236] & ~test_store_f[236])
        first_valid_no_store_id = 236;
    else if (test_valid_f[237] & ~test_store_f[237])
        first_valid_no_store_id = 237;
    else if (test_valid_f[238] & ~test_store_f[238])
        first_valid_no_store_id = 238;
    else if (test_valid_f[239] & ~test_store_f[239])
        first_valid_no_store_id = 239;
    else if (test_valid_f[240] & ~test_store_f[240])
        first_valid_no_store_id = 240;
    else if (test_valid_f[241] & ~test_store_f[241])
        first_valid_no_store_id = 241;
    else if (test_valid_f[242] & ~test_store_f[242])
        first_valid_no_store_id = 242;
    else if (test_valid_f[243] & ~test_store_f[243])
        first_valid_no_store_id = 243;
    else if (test_valid_f[244] & ~test_store_f[244])
        first_valid_no_store_id = 244;
    else if (test_valid_f[245] & ~test_store_f[245])
        first_valid_no_store_id = 245;
    else if (test_valid_f[246] & ~test_store_f[246])
        first_valid_no_store_id = 246;
    else if (test_valid_f[247] & ~test_store_f[247])
        first_valid_no_store_id = 247;
    else if (test_valid_f[248] & ~test_store_f[248])
        first_valid_no_store_id = 248;
    else if (test_valid_f[249] & ~test_store_f[249])
        first_valid_no_store_id = 249;
    else if (test_valid_f[250] & ~test_store_f[250])
        first_valid_no_store_id = 250;
    else if (test_valid_f[251] & ~test_store_f[251])
        first_valid_no_store_id = 251;
    else if (test_valid_f[252] & ~test_store_f[252])
        first_valid_no_store_id = 252;
    else if (test_valid_f[253] & ~test_store_f[253])
        first_valid_no_store_id = 253;
    else if (test_valid_f[254] & ~test_store_f[254])
        first_valid_no_store_id = 254;
    else if (test_valid_f[255] & ~test_store_f[255])
        first_valid_no_store_id = 255;


    // Find first valid entry with a complete store and no load already sent
    any_valid_store_no_load = |(test_valid_f & test_store_f & test_store_ack_f & ~test_load_f);
    if (test_valid_f[0] & test_store_f[0] & test_store_ack_f[0] & ~test_load_f[0])
        first_valid_store_no_load_id = 0;
    else if (test_valid_f[1] & test_store_f[1] & test_store_ack_f[1] & ~test_load_f[1])
        first_valid_store_no_load_id = 1;
    else if (test_valid_f[2] & test_store_f[2] & test_store_ack_f[2] & ~test_load_f[2])
        first_valid_store_no_load_id = 2;
    else if (test_valid_f[3] & test_store_f[3] & test_store_ack_f[3] & ~test_load_f[3])
        first_valid_store_no_load_id = 3;
    else if (test_valid_f[4] & test_store_f[4] & test_store_ack_f[4] & ~test_load_f[4])
        first_valid_store_no_load_id = 4;
    else if (test_valid_f[5] & test_store_f[5] & test_store_ack_f[5] & ~test_load_f[5])
        first_valid_store_no_load_id = 5;
    else if (test_valid_f[6] & test_store_f[6] & test_store_ack_f[6] & ~test_load_f[6])
        first_valid_store_no_load_id = 6;
    else if (test_valid_f[7] & test_store_f[7] & test_store_ack_f[7] & ~test_load_f[7])
        first_valid_store_no_load_id = 7;
    else if (test_valid_f[8] & test_store_f[8] & test_store_ack_f[8] & ~test_load_f[8])
        first_valid_store_no_load_id = 8;
    else if (test_valid_f[9] & test_store_f[9] & test_store_ack_f[9] & ~test_load_f[9])
        first_valid_store_no_load_id = 9;
    else if (test_valid_f[10] & test_store_f[10] & test_store_ack_f[10] & ~test_load_f[10])
        first_valid_store_no_load_id = 10;
    else if (test_valid_f[11] & test_store_f[11] & test_store_ack_f[11] & ~test_load_f[11])
        first_valid_store_no_load_id = 11;
    else if (test_valid_f[12] & test_store_f[12] & test_store_ack_f[12] & ~test_load_f[12])
        first_valid_store_no_load_id = 12;
    else if (test_valid_f[13] & test_store_f[13] & test_store_ack_f[13] & ~test_load_f[13])
        first_valid_store_no_load_id = 13;
    else if (test_valid_f[14] & test_store_f[14] & test_store_ack_f[14] & ~test_load_f[14])
        first_valid_store_no_load_id = 14;
    else if (test_valid_f[15] & test_store_f[15] & test_store_ack_f[15] & ~test_load_f[15])
        first_valid_store_no_load_id = 15;
    else if (test_valid_f[16] & test_store_f[16] & test_store_ack_f[16] & ~test_load_f[16])
        first_valid_store_no_load_id = 16;
    else if (test_valid_f[17] & test_store_f[17] & test_store_ack_f[17] & ~test_load_f[17])
        first_valid_store_no_load_id = 17;
    else if (test_valid_f[18] & test_store_f[18] & test_store_ack_f[18] & ~test_load_f[18])
        first_valid_store_no_load_id = 18;
    else if (test_valid_f[19] & test_store_f[19] & test_store_ack_f[19] & ~test_load_f[19])
        first_valid_store_no_load_id = 19;
    else if (test_valid_f[20] & test_store_f[20] & test_store_ack_f[20] & ~test_load_f[20])
        first_valid_store_no_load_id = 20;
    else if (test_valid_f[21] & test_store_f[21] & test_store_ack_f[21] & ~test_load_f[21])
        first_valid_store_no_load_id = 21;
    else if (test_valid_f[22] & test_store_f[22] & test_store_ack_f[22] & ~test_load_f[22])
        first_valid_store_no_load_id = 22;
    else if (test_valid_f[23] & test_store_f[23] & test_store_ack_f[23] & ~test_load_f[23])
        first_valid_store_no_load_id = 23;
    else if (test_valid_f[24] & test_store_f[24] & test_store_ack_f[24] & ~test_load_f[24])
        first_valid_store_no_load_id = 24;
    else if (test_valid_f[25] & test_store_f[25] & test_store_ack_f[25] & ~test_load_f[25])
        first_valid_store_no_load_id = 25;
    else if (test_valid_f[26] & test_store_f[26] & test_store_ack_f[26] & ~test_load_f[26])
        first_valid_store_no_load_id = 26;
    else if (test_valid_f[27] & test_store_f[27] & test_store_ack_f[27] & ~test_load_f[27])
        first_valid_store_no_load_id = 27;
    else if (test_valid_f[28] & test_store_f[28] & test_store_ack_f[28] & ~test_load_f[28])
        first_valid_store_no_load_id = 28;
    else if (test_valid_f[29] & test_store_f[29] & test_store_ack_f[29] & ~test_load_f[29])
        first_valid_store_no_load_id = 29;
    else if (test_valid_f[30] & test_store_f[30] & test_store_ack_f[30] & ~test_load_f[30])
        first_valid_store_no_load_id = 30;
    else if (test_valid_f[31] & test_store_f[31] & test_store_ack_f[31] & ~test_load_f[31])
        first_valid_store_no_load_id = 31;
    else if (test_valid_f[32] & test_store_f[32] & test_store_ack_f[32] & ~test_load_f[32])
        first_valid_store_no_load_id = 32;
    else if (test_valid_f[33] & test_store_f[33] & test_store_ack_f[33] & ~test_load_f[33])
        first_valid_store_no_load_id = 33;
    else if (test_valid_f[34] & test_store_f[34] & test_store_ack_f[34] & ~test_load_f[34])
        first_valid_store_no_load_id = 34;
    else if (test_valid_f[35] & test_store_f[35] & test_store_ack_f[35] & ~test_load_f[35])
        first_valid_store_no_load_id = 35;
    else if (test_valid_f[36] & test_store_f[36] & test_store_ack_f[36] & ~test_load_f[36])
        first_valid_store_no_load_id = 36;
    else if (test_valid_f[37] & test_store_f[37] & test_store_ack_f[37] & ~test_load_f[37])
        first_valid_store_no_load_id = 37;
    else if (test_valid_f[38] & test_store_f[38] & test_store_ack_f[38] & ~test_load_f[38])
        first_valid_store_no_load_id = 38;
    else if (test_valid_f[39] & test_store_f[39] & test_store_ack_f[39] & ~test_load_f[39])
        first_valid_store_no_load_id = 39;
    else if (test_valid_f[40] & test_store_f[40] & test_store_ack_f[40] & ~test_load_f[40])
        first_valid_store_no_load_id = 40;
    else if (test_valid_f[41] & test_store_f[41] & test_store_ack_f[41] & ~test_load_f[41])
        first_valid_store_no_load_id = 41;
    else if (test_valid_f[42] & test_store_f[42] & test_store_ack_f[42] & ~test_load_f[42])
        first_valid_store_no_load_id = 42;
    else if (test_valid_f[43] & test_store_f[43] & test_store_ack_f[43] & ~test_load_f[43])
        first_valid_store_no_load_id = 43;
    else if (test_valid_f[44] & test_store_f[44] & test_store_ack_f[44] & ~test_load_f[44])
        first_valid_store_no_load_id = 44;
    else if (test_valid_f[45] & test_store_f[45] & test_store_ack_f[45] & ~test_load_f[45])
        first_valid_store_no_load_id = 45;
    else if (test_valid_f[46] & test_store_f[46] & test_store_ack_f[46] & ~test_load_f[46])
        first_valid_store_no_load_id = 46;
    else if (test_valid_f[47] & test_store_f[47] & test_store_ack_f[47] & ~test_load_f[47])
        first_valid_store_no_load_id = 47;
    else if (test_valid_f[48] & test_store_f[48] & test_store_ack_f[48] & ~test_load_f[48])
        first_valid_store_no_load_id = 48;
    else if (test_valid_f[49] & test_store_f[49] & test_store_ack_f[49] & ~test_load_f[49])
        first_valid_store_no_load_id = 49;
    else if (test_valid_f[50] & test_store_f[50] & test_store_ack_f[50] & ~test_load_f[50])
        first_valid_store_no_load_id = 50;
    else if (test_valid_f[51] & test_store_f[51] & test_store_ack_f[51] & ~test_load_f[51])
        first_valid_store_no_load_id = 51;
    else if (test_valid_f[52] & test_store_f[52] & test_store_ack_f[52] & ~test_load_f[52])
        first_valid_store_no_load_id = 52;
    else if (test_valid_f[53] & test_store_f[53] & test_store_ack_f[53] & ~test_load_f[53])
        first_valid_store_no_load_id = 53;
    else if (test_valid_f[54] & test_store_f[54] & test_store_ack_f[54] & ~test_load_f[54])
        first_valid_store_no_load_id = 54;
    else if (test_valid_f[55] & test_store_f[55] & test_store_ack_f[55] & ~test_load_f[55])
        first_valid_store_no_load_id = 55;
    else if (test_valid_f[56] & test_store_f[56] & test_store_ack_f[56] & ~test_load_f[56])
        first_valid_store_no_load_id = 56;
    else if (test_valid_f[57] & test_store_f[57] & test_store_ack_f[57] & ~test_load_f[57])
        first_valid_store_no_load_id = 57;
    else if (test_valid_f[58] & test_store_f[58] & test_store_ack_f[58] & ~test_load_f[58])
        first_valid_store_no_load_id = 58;
    else if (test_valid_f[59] & test_store_f[59] & test_store_ack_f[59] & ~test_load_f[59])
        first_valid_store_no_load_id = 59;
    else if (test_valid_f[60] & test_store_f[60] & test_store_ack_f[60] & ~test_load_f[60])
        first_valid_store_no_load_id = 60;
    else if (test_valid_f[61] & test_store_f[61] & test_store_ack_f[61] & ~test_load_f[61])
        first_valid_store_no_load_id = 61;
    else if (test_valid_f[62] & test_store_f[62] & test_store_ack_f[62] & ~test_load_f[62])
        first_valid_store_no_load_id = 62;
    else if (test_valid_f[63] & test_store_f[63] & test_store_ack_f[63] & ~test_load_f[63])
        first_valid_store_no_load_id = 63;
    else if (test_valid_f[64] & test_store_f[64] & test_store_ack_f[64] & ~test_load_f[64])
        first_valid_store_no_load_id = 64;
    else if (test_valid_f[65] & test_store_f[65] & test_store_ack_f[65] & ~test_load_f[65])
        first_valid_store_no_load_id = 65;
    else if (test_valid_f[66] & test_store_f[66] & test_store_ack_f[66] & ~test_load_f[66])
        first_valid_store_no_load_id = 66;
    else if (test_valid_f[67] & test_store_f[67] & test_store_ack_f[67] & ~test_load_f[67])
        first_valid_store_no_load_id = 67;
    else if (test_valid_f[68] & test_store_f[68] & test_store_ack_f[68] & ~test_load_f[68])
        first_valid_store_no_load_id = 68;
    else if (test_valid_f[69] & test_store_f[69] & test_store_ack_f[69] & ~test_load_f[69])
        first_valid_store_no_load_id = 69;
    else if (test_valid_f[70] & test_store_f[70] & test_store_ack_f[70] & ~test_load_f[70])
        first_valid_store_no_load_id = 70;
    else if (test_valid_f[71] & test_store_f[71] & test_store_ack_f[71] & ~test_load_f[71])
        first_valid_store_no_load_id = 71;
    else if (test_valid_f[72] & test_store_f[72] & test_store_ack_f[72] & ~test_load_f[72])
        first_valid_store_no_load_id = 72;
    else if (test_valid_f[73] & test_store_f[73] & test_store_ack_f[73] & ~test_load_f[73])
        first_valid_store_no_load_id = 73;
    else if (test_valid_f[74] & test_store_f[74] & test_store_ack_f[74] & ~test_load_f[74])
        first_valid_store_no_load_id = 74;
    else if (test_valid_f[75] & test_store_f[75] & test_store_ack_f[75] & ~test_load_f[75])
        first_valid_store_no_load_id = 75;
    else if (test_valid_f[76] & test_store_f[76] & test_store_ack_f[76] & ~test_load_f[76])
        first_valid_store_no_load_id = 76;
    else if (test_valid_f[77] & test_store_f[77] & test_store_ack_f[77] & ~test_load_f[77])
        first_valid_store_no_load_id = 77;
    else if (test_valid_f[78] & test_store_f[78] & test_store_ack_f[78] & ~test_load_f[78])
        first_valid_store_no_load_id = 78;
    else if (test_valid_f[79] & test_store_f[79] & test_store_ack_f[79] & ~test_load_f[79])
        first_valid_store_no_load_id = 79;
    else if (test_valid_f[80] & test_store_f[80] & test_store_ack_f[80] & ~test_load_f[80])
        first_valid_store_no_load_id = 80;
    else if (test_valid_f[81] & test_store_f[81] & test_store_ack_f[81] & ~test_load_f[81])
        first_valid_store_no_load_id = 81;
    else if (test_valid_f[82] & test_store_f[82] & test_store_ack_f[82] & ~test_load_f[82])
        first_valid_store_no_load_id = 82;
    else if (test_valid_f[83] & test_store_f[83] & test_store_ack_f[83] & ~test_load_f[83])
        first_valid_store_no_load_id = 83;
    else if (test_valid_f[84] & test_store_f[84] & test_store_ack_f[84] & ~test_load_f[84])
        first_valid_store_no_load_id = 84;
    else if (test_valid_f[85] & test_store_f[85] & test_store_ack_f[85] & ~test_load_f[85])
        first_valid_store_no_load_id = 85;
    else if (test_valid_f[86] & test_store_f[86] & test_store_ack_f[86] & ~test_load_f[86])
        first_valid_store_no_load_id = 86;
    else if (test_valid_f[87] & test_store_f[87] & test_store_ack_f[87] & ~test_load_f[87])
        first_valid_store_no_load_id = 87;
    else if (test_valid_f[88] & test_store_f[88] & test_store_ack_f[88] & ~test_load_f[88])
        first_valid_store_no_load_id = 88;
    else if (test_valid_f[89] & test_store_f[89] & test_store_ack_f[89] & ~test_load_f[89])
        first_valid_store_no_load_id = 89;
    else if (test_valid_f[90] & test_store_f[90] & test_store_ack_f[90] & ~test_load_f[90])
        first_valid_store_no_load_id = 90;
    else if (test_valid_f[91] & test_store_f[91] & test_store_ack_f[91] & ~test_load_f[91])
        first_valid_store_no_load_id = 91;
    else if (test_valid_f[92] & test_store_f[92] & test_store_ack_f[92] & ~test_load_f[92])
        first_valid_store_no_load_id = 92;
    else if (test_valid_f[93] & test_store_f[93] & test_store_ack_f[93] & ~test_load_f[93])
        first_valid_store_no_load_id = 93;
    else if (test_valid_f[94] & test_store_f[94] & test_store_ack_f[94] & ~test_load_f[94])
        first_valid_store_no_load_id = 94;
    else if (test_valid_f[95] & test_store_f[95] & test_store_ack_f[95] & ~test_load_f[95])
        first_valid_store_no_load_id = 95;
    else if (test_valid_f[96] & test_store_f[96] & test_store_ack_f[96] & ~test_load_f[96])
        first_valid_store_no_load_id = 96;
    else if (test_valid_f[97] & test_store_f[97] & test_store_ack_f[97] & ~test_load_f[97])
        first_valid_store_no_load_id = 97;
    else if (test_valid_f[98] & test_store_f[98] & test_store_ack_f[98] & ~test_load_f[98])
        first_valid_store_no_load_id = 98;
    else if (test_valid_f[99] & test_store_f[99] & test_store_ack_f[99] & ~test_load_f[99])
        first_valid_store_no_load_id = 99;
    else if (test_valid_f[100] & test_store_f[100] & test_store_ack_f[100] & ~test_load_f[100])
        first_valid_store_no_load_id = 100;
    else if (test_valid_f[101] & test_store_f[101] & test_store_ack_f[101] & ~test_load_f[101])
        first_valid_store_no_load_id = 101;
    else if (test_valid_f[102] & test_store_f[102] & test_store_ack_f[102] & ~test_load_f[102])
        first_valid_store_no_load_id = 102;
    else if (test_valid_f[103] & test_store_f[103] & test_store_ack_f[103] & ~test_load_f[103])
        first_valid_store_no_load_id = 103;
    else if (test_valid_f[104] & test_store_f[104] & test_store_ack_f[104] & ~test_load_f[104])
        first_valid_store_no_load_id = 104;
    else if (test_valid_f[105] & test_store_f[105] & test_store_ack_f[105] & ~test_load_f[105])
        first_valid_store_no_load_id = 105;
    else if (test_valid_f[106] & test_store_f[106] & test_store_ack_f[106] & ~test_load_f[106])
        first_valid_store_no_load_id = 106;
    else if (test_valid_f[107] & test_store_f[107] & test_store_ack_f[107] & ~test_load_f[107])
        first_valid_store_no_load_id = 107;
    else if (test_valid_f[108] & test_store_f[108] & test_store_ack_f[108] & ~test_load_f[108])
        first_valid_store_no_load_id = 108;
    else if (test_valid_f[109] & test_store_f[109] & test_store_ack_f[109] & ~test_load_f[109])
        first_valid_store_no_load_id = 109;
    else if (test_valid_f[110] & test_store_f[110] & test_store_ack_f[110] & ~test_load_f[110])
        first_valid_store_no_load_id = 110;
    else if (test_valid_f[111] & test_store_f[111] & test_store_ack_f[111] & ~test_load_f[111])
        first_valid_store_no_load_id = 111;
    else if (test_valid_f[112] & test_store_f[112] & test_store_ack_f[112] & ~test_load_f[112])
        first_valid_store_no_load_id = 112;
    else if (test_valid_f[113] & test_store_f[113] & test_store_ack_f[113] & ~test_load_f[113])
        first_valid_store_no_load_id = 113;
    else if (test_valid_f[114] & test_store_f[114] & test_store_ack_f[114] & ~test_load_f[114])
        first_valid_store_no_load_id = 114;
    else if (test_valid_f[115] & test_store_f[115] & test_store_ack_f[115] & ~test_load_f[115])
        first_valid_store_no_load_id = 115;
    else if (test_valid_f[116] & test_store_f[116] & test_store_ack_f[116] & ~test_load_f[116])
        first_valid_store_no_load_id = 116;
    else if (test_valid_f[117] & test_store_f[117] & test_store_ack_f[117] & ~test_load_f[117])
        first_valid_store_no_load_id = 117;
    else if (test_valid_f[118] & test_store_f[118] & test_store_ack_f[118] & ~test_load_f[118])
        first_valid_store_no_load_id = 118;
    else if (test_valid_f[119] & test_store_f[119] & test_store_ack_f[119] & ~test_load_f[119])
        first_valid_store_no_load_id = 119;
    else if (test_valid_f[120] & test_store_f[120] & test_store_ack_f[120] & ~test_load_f[120])
        first_valid_store_no_load_id = 120;
    else if (test_valid_f[121] & test_store_f[121] & test_store_ack_f[121] & ~test_load_f[121])
        first_valid_store_no_load_id = 121;
    else if (test_valid_f[122] & test_store_f[122] & test_store_ack_f[122] & ~test_load_f[122])
        first_valid_store_no_load_id = 122;
    else if (test_valid_f[123] & test_store_f[123] & test_store_ack_f[123] & ~test_load_f[123])
        first_valid_store_no_load_id = 123;
    else if (test_valid_f[124] & test_store_f[124] & test_store_ack_f[124] & ~test_load_f[124])
        first_valid_store_no_load_id = 124;
    else if (test_valid_f[125] & test_store_f[125] & test_store_ack_f[125] & ~test_load_f[125])
        first_valid_store_no_load_id = 125;
    else if (test_valid_f[126] & test_store_f[126] & test_store_ack_f[126] & ~test_load_f[126])
        first_valid_store_no_load_id = 126;
    else if (test_valid_f[127] & test_store_f[127] & test_store_ack_f[127] & ~test_load_f[127])
        first_valid_store_no_load_id = 127;
    else if (test_valid_f[128] & test_store_f[128] & test_store_ack_f[128] & ~test_load_f[128])
        first_valid_store_no_load_id = 128;
    else if (test_valid_f[129] & test_store_f[129] & test_store_ack_f[129] & ~test_load_f[129])
        first_valid_store_no_load_id = 129;
    else if (test_valid_f[130] & test_store_f[130] & test_store_ack_f[130] & ~test_load_f[130])
        first_valid_store_no_load_id = 130;
    else if (test_valid_f[131] & test_store_f[131] & test_store_ack_f[131] & ~test_load_f[131])
        first_valid_store_no_load_id = 131;
    else if (test_valid_f[132] & test_store_f[132] & test_store_ack_f[132] & ~test_load_f[132])
        first_valid_store_no_load_id = 132;
    else if (test_valid_f[133] & test_store_f[133] & test_store_ack_f[133] & ~test_load_f[133])
        first_valid_store_no_load_id = 133;
    else if (test_valid_f[134] & test_store_f[134] & test_store_ack_f[134] & ~test_load_f[134])
        first_valid_store_no_load_id = 134;
    else if (test_valid_f[135] & test_store_f[135] & test_store_ack_f[135] & ~test_load_f[135])
        first_valid_store_no_load_id = 135;
    else if (test_valid_f[136] & test_store_f[136] & test_store_ack_f[136] & ~test_load_f[136])
        first_valid_store_no_load_id = 136;
    else if (test_valid_f[137] & test_store_f[137] & test_store_ack_f[137] & ~test_load_f[137])
        first_valid_store_no_load_id = 137;
    else if (test_valid_f[138] & test_store_f[138] & test_store_ack_f[138] & ~test_load_f[138])
        first_valid_store_no_load_id = 138;
    else if (test_valid_f[139] & test_store_f[139] & test_store_ack_f[139] & ~test_load_f[139])
        first_valid_store_no_load_id = 139;
    else if (test_valid_f[140] & test_store_f[140] & test_store_ack_f[140] & ~test_load_f[140])
        first_valid_store_no_load_id = 140;
    else if (test_valid_f[141] & test_store_f[141] & test_store_ack_f[141] & ~test_load_f[141])
        first_valid_store_no_load_id = 141;
    else if (test_valid_f[142] & test_store_f[142] & test_store_ack_f[142] & ~test_load_f[142])
        first_valid_store_no_load_id = 142;
    else if (test_valid_f[143] & test_store_f[143] & test_store_ack_f[143] & ~test_load_f[143])
        first_valid_store_no_load_id = 143;
    else if (test_valid_f[144] & test_store_f[144] & test_store_ack_f[144] & ~test_load_f[144])
        first_valid_store_no_load_id = 144;
    else if (test_valid_f[145] & test_store_f[145] & test_store_ack_f[145] & ~test_load_f[145])
        first_valid_store_no_load_id = 145;
    else if (test_valid_f[146] & test_store_f[146] & test_store_ack_f[146] & ~test_load_f[146])
        first_valid_store_no_load_id = 146;
    else if (test_valid_f[147] & test_store_f[147] & test_store_ack_f[147] & ~test_load_f[147])
        first_valid_store_no_load_id = 147;
    else if (test_valid_f[148] & test_store_f[148] & test_store_ack_f[148] & ~test_load_f[148])
        first_valid_store_no_load_id = 148;
    else if (test_valid_f[149] & test_store_f[149] & test_store_ack_f[149] & ~test_load_f[149])
        first_valid_store_no_load_id = 149;
    else if (test_valid_f[150] & test_store_f[150] & test_store_ack_f[150] & ~test_load_f[150])
        first_valid_store_no_load_id = 150;
    else if (test_valid_f[151] & test_store_f[151] & test_store_ack_f[151] & ~test_load_f[151])
        first_valid_store_no_load_id = 151;
    else if (test_valid_f[152] & test_store_f[152] & test_store_ack_f[152] & ~test_load_f[152])
        first_valid_store_no_load_id = 152;
    else if (test_valid_f[153] & test_store_f[153] & test_store_ack_f[153] & ~test_load_f[153])
        first_valid_store_no_load_id = 153;
    else if (test_valid_f[154] & test_store_f[154] & test_store_ack_f[154] & ~test_load_f[154])
        first_valid_store_no_load_id = 154;
    else if (test_valid_f[155] & test_store_f[155] & test_store_ack_f[155] & ~test_load_f[155])
        first_valid_store_no_load_id = 155;
    else if (test_valid_f[156] & test_store_f[156] & test_store_ack_f[156] & ~test_load_f[156])
        first_valid_store_no_load_id = 156;
    else if (test_valid_f[157] & test_store_f[157] & test_store_ack_f[157] & ~test_load_f[157])
        first_valid_store_no_load_id = 157;
    else if (test_valid_f[158] & test_store_f[158] & test_store_ack_f[158] & ~test_load_f[158])
        first_valid_store_no_load_id = 158;
    else if (test_valid_f[159] & test_store_f[159] & test_store_ack_f[159] & ~test_load_f[159])
        first_valid_store_no_load_id = 159;
    else if (test_valid_f[160] & test_store_f[160] & test_store_ack_f[160] & ~test_load_f[160])
        first_valid_store_no_load_id = 160;
    else if (test_valid_f[161] & test_store_f[161] & test_store_ack_f[161] & ~test_load_f[161])
        first_valid_store_no_load_id = 161;
    else if (test_valid_f[162] & test_store_f[162] & test_store_ack_f[162] & ~test_load_f[162])
        first_valid_store_no_load_id = 162;
    else if (test_valid_f[163] & test_store_f[163] & test_store_ack_f[163] & ~test_load_f[163])
        first_valid_store_no_load_id = 163;
    else if (test_valid_f[164] & test_store_f[164] & test_store_ack_f[164] & ~test_load_f[164])
        first_valid_store_no_load_id = 164;
    else if (test_valid_f[165] & test_store_f[165] & test_store_ack_f[165] & ~test_load_f[165])
        first_valid_store_no_load_id = 165;
    else if (test_valid_f[166] & test_store_f[166] & test_store_ack_f[166] & ~test_load_f[166])
        first_valid_store_no_load_id = 166;
    else if (test_valid_f[167] & test_store_f[167] & test_store_ack_f[167] & ~test_load_f[167])
        first_valid_store_no_load_id = 167;
    else if (test_valid_f[168] & test_store_f[168] & test_store_ack_f[168] & ~test_load_f[168])
        first_valid_store_no_load_id = 168;
    else if (test_valid_f[169] & test_store_f[169] & test_store_ack_f[169] & ~test_load_f[169])
        first_valid_store_no_load_id = 169;
    else if (test_valid_f[170] & test_store_f[170] & test_store_ack_f[170] & ~test_load_f[170])
        first_valid_store_no_load_id = 170;
    else if (test_valid_f[171] & test_store_f[171] & test_store_ack_f[171] & ~test_load_f[171])
        first_valid_store_no_load_id = 171;
    else if (test_valid_f[172] & test_store_f[172] & test_store_ack_f[172] & ~test_load_f[172])
        first_valid_store_no_load_id = 172;
    else if (test_valid_f[173] & test_store_f[173] & test_store_ack_f[173] & ~test_load_f[173])
        first_valid_store_no_load_id = 173;
    else if (test_valid_f[174] & test_store_f[174] & test_store_ack_f[174] & ~test_load_f[174])
        first_valid_store_no_load_id = 174;
    else if (test_valid_f[175] & test_store_f[175] & test_store_ack_f[175] & ~test_load_f[175])
        first_valid_store_no_load_id = 175;
    else if (test_valid_f[176] & test_store_f[176] & test_store_ack_f[176] & ~test_load_f[176])
        first_valid_store_no_load_id = 176;
    else if (test_valid_f[177] & test_store_f[177] & test_store_ack_f[177] & ~test_load_f[177])
        first_valid_store_no_load_id = 177;
    else if (test_valid_f[178] & test_store_f[178] & test_store_ack_f[178] & ~test_load_f[178])
        first_valid_store_no_load_id = 178;
    else if (test_valid_f[179] & test_store_f[179] & test_store_ack_f[179] & ~test_load_f[179])
        first_valid_store_no_load_id = 179;
    else if (test_valid_f[180] & test_store_f[180] & test_store_ack_f[180] & ~test_load_f[180])
        first_valid_store_no_load_id = 180;
    else if (test_valid_f[181] & test_store_f[181] & test_store_ack_f[181] & ~test_load_f[181])
        first_valid_store_no_load_id = 181;
    else if (test_valid_f[182] & test_store_f[182] & test_store_ack_f[182] & ~test_load_f[182])
        first_valid_store_no_load_id = 182;
    else if (test_valid_f[183] & test_store_f[183] & test_store_ack_f[183] & ~test_load_f[183])
        first_valid_store_no_load_id = 183;
    else if (test_valid_f[184] & test_store_f[184] & test_store_ack_f[184] & ~test_load_f[184])
        first_valid_store_no_load_id = 184;
    else if (test_valid_f[185] & test_store_f[185] & test_store_ack_f[185] & ~test_load_f[185])
        first_valid_store_no_load_id = 185;
    else if (test_valid_f[186] & test_store_f[186] & test_store_ack_f[186] & ~test_load_f[186])
        first_valid_store_no_load_id = 186;
    else if (test_valid_f[187] & test_store_f[187] & test_store_ack_f[187] & ~test_load_f[187])
        first_valid_store_no_load_id = 187;
    else if (test_valid_f[188] & test_store_f[188] & test_store_ack_f[188] & ~test_load_f[188])
        first_valid_store_no_load_id = 188;
    else if (test_valid_f[189] & test_store_f[189] & test_store_ack_f[189] & ~test_load_f[189])
        first_valid_store_no_load_id = 189;
    else if (test_valid_f[190] & test_store_f[190] & test_store_ack_f[190] & ~test_load_f[190])
        first_valid_store_no_load_id = 190;
    else if (test_valid_f[191] & test_store_f[191] & test_store_ack_f[191] & ~test_load_f[191])
        first_valid_store_no_load_id = 191;
    else if (test_valid_f[192] & test_store_f[192] & test_store_ack_f[192] & ~test_load_f[192])
        first_valid_store_no_load_id = 192;
    else if (test_valid_f[193] & test_store_f[193] & test_store_ack_f[193] & ~test_load_f[193])
        first_valid_store_no_load_id = 193;
    else if (test_valid_f[194] & test_store_f[194] & test_store_ack_f[194] & ~test_load_f[194])
        first_valid_store_no_load_id = 194;
    else if (test_valid_f[195] & test_store_f[195] & test_store_ack_f[195] & ~test_load_f[195])
        first_valid_store_no_load_id = 195;
    else if (test_valid_f[196] & test_store_f[196] & test_store_ack_f[196] & ~test_load_f[196])
        first_valid_store_no_load_id = 196;
    else if (test_valid_f[197] & test_store_f[197] & test_store_ack_f[197] & ~test_load_f[197])
        first_valid_store_no_load_id = 197;
    else if (test_valid_f[198] & test_store_f[198] & test_store_ack_f[198] & ~test_load_f[198])
        first_valid_store_no_load_id = 198;
    else if (test_valid_f[199] & test_store_f[199] & test_store_ack_f[199] & ~test_load_f[199])
        first_valid_store_no_load_id = 199;
    else if (test_valid_f[200] & test_store_f[200] & test_store_ack_f[200] & ~test_load_f[200])
        first_valid_store_no_load_id = 200;
    else if (test_valid_f[201] & test_store_f[201] & test_store_ack_f[201] & ~test_load_f[201])
        first_valid_store_no_load_id = 201;
    else if (test_valid_f[202] & test_store_f[202] & test_store_ack_f[202] & ~test_load_f[202])
        first_valid_store_no_load_id = 202;
    else if (test_valid_f[203] & test_store_f[203] & test_store_ack_f[203] & ~test_load_f[203])
        first_valid_store_no_load_id = 203;
    else if (test_valid_f[204] & test_store_f[204] & test_store_ack_f[204] & ~test_load_f[204])
        first_valid_store_no_load_id = 204;
    else if (test_valid_f[205] & test_store_f[205] & test_store_ack_f[205] & ~test_load_f[205])
        first_valid_store_no_load_id = 205;
    else if (test_valid_f[206] & test_store_f[206] & test_store_ack_f[206] & ~test_load_f[206])
        first_valid_store_no_load_id = 206;
    else if (test_valid_f[207] & test_store_f[207] & test_store_ack_f[207] & ~test_load_f[207])
        first_valid_store_no_load_id = 207;
    else if (test_valid_f[208] & test_store_f[208] & test_store_ack_f[208] & ~test_load_f[208])
        first_valid_store_no_load_id = 208;
    else if (test_valid_f[209] & test_store_f[209] & test_store_ack_f[209] & ~test_load_f[209])
        first_valid_store_no_load_id = 209;
    else if (test_valid_f[210] & test_store_f[210] & test_store_ack_f[210] & ~test_load_f[210])
        first_valid_store_no_load_id = 210;
    else if (test_valid_f[211] & test_store_f[211] & test_store_ack_f[211] & ~test_load_f[211])
        first_valid_store_no_load_id = 211;
    else if (test_valid_f[212] & test_store_f[212] & test_store_ack_f[212] & ~test_load_f[212])
        first_valid_store_no_load_id = 212;
    else if (test_valid_f[213] & test_store_f[213] & test_store_ack_f[213] & ~test_load_f[213])
        first_valid_store_no_load_id = 213;
    else if (test_valid_f[214] & test_store_f[214] & test_store_ack_f[214] & ~test_load_f[214])
        first_valid_store_no_load_id = 214;
    else if (test_valid_f[215] & test_store_f[215] & test_store_ack_f[215] & ~test_load_f[215])
        first_valid_store_no_load_id = 215;
    else if (test_valid_f[216] & test_store_f[216] & test_store_ack_f[216] & ~test_load_f[216])
        first_valid_store_no_load_id = 216;
    else if (test_valid_f[217] & test_store_f[217] & test_store_ack_f[217] & ~test_load_f[217])
        first_valid_store_no_load_id = 217;
    else if (test_valid_f[218] & test_store_f[218] & test_store_ack_f[218] & ~test_load_f[218])
        first_valid_store_no_load_id = 218;
    else if (test_valid_f[219] & test_store_f[219] & test_store_ack_f[219] & ~test_load_f[219])
        first_valid_store_no_load_id = 219;
    else if (test_valid_f[220] & test_store_f[220] & test_store_ack_f[220] & ~test_load_f[220])
        first_valid_store_no_load_id = 220;
    else if (test_valid_f[221] & test_store_f[221] & test_store_ack_f[221] & ~test_load_f[221])
        first_valid_store_no_load_id = 221;
    else if (test_valid_f[222] & test_store_f[222] & test_store_ack_f[222] & ~test_load_f[222])
        first_valid_store_no_load_id = 222;
    else if (test_valid_f[223] & test_store_f[223] & test_store_ack_f[223] & ~test_load_f[223])
        first_valid_store_no_load_id = 223;
    else if (test_valid_f[224] & test_store_f[224] & test_store_ack_f[224] & ~test_load_f[224])
        first_valid_store_no_load_id = 224;
    else if (test_valid_f[225] & test_store_f[225] & test_store_ack_f[225] & ~test_load_f[225])
        first_valid_store_no_load_id = 225;
    else if (test_valid_f[226] & test_store_f[226] & test_store_ack_f[226] & ~test_load_f[226])
        first_valid_store_no_load_id = 226;
    else if (test_valid_f[227] & test_store_f[227] & test_store_ack_f[227] & ~test_load_f[227])
        first_valid_store_no_load_id = 227;
    else if (test_valid_f[228] & test_store_f[228] & test_store_ack_f[228] & ~test_load_f[228])
        first_valid_store_no_load_id = 228;
    else if (test_valid_f[229] & test_store_f[229] & test_store_ack_f[229] & ~test_load_f[229])
        first_valid_store_no_load_id = 229;
    else if (test_valid_f[230] & test_store_f[230] & test_store_ack_f[230] & ~test_load_f[230])
        first_valid_store_no_load_id = 230;
    else if (test_valid_f[231] & test_store_f[231] & test_store_ack_f[231] & ~test_load_f[231])
        first_valid_store_no_load_id = 231;
    else if (test_valid_f[232] & test_store_f[232] & test_store_ack_f[232] & ~test_load_f[232])
        first_valid_store_no_load_id = 232;
    else if (test_valid_f[233] & test_store_f[233] & test_store_ack_f[233] & ~test_load_f[233])
        first_valid_store_no_load_id = 233;
    else if (test_valid_f[234] & test_store_f[234] & test_store_ack_f[234] & ~test_load_f[234])
        first_valid_store_no_load_id = 234;
    else if (test_valid_f[235] & test_store_f[235] & test_store_ack_f[235] & ~test_load_f[235])
        first_valid_store_no_load_id = 235;
    else if (test_valid_f[236] & test_store_f[236] & test_store_ack_f[236] & ~test_load_f[236])
        first_valid_store_no_load_id = 236;
    else if (test_valid_f[237] & test_store_f[237] & test_store_ack_f[237] & ~test_load_f[237])
        first_valid_store_no_load_id = 237;
    else if (test_valid_f[238] & test_store_f[238] & test_store_ack_f[238] & ~test_load_f[238])
        first_valid_store_no_load_id = 238;
    else if (test_valid_f[239] & test_store_f[239] & test_store_ack_f[239] & ~test_load_f[239])
        first_valid_store_no_load_id = 239;
    else if (test_valid_f[240] & test_store_f[240] & test_store_ack_f[240] & ~test_load_f[240])
        first_valid_store_no_load_id = 240;
    else if (test_valid_f[241] & test_store_f[241] & test_store_ack_f[241] & ~test_load_f[241])
        first_valid_store_no_load_id = 241;
    else if (test_valid_f[242] & test_store_f[242] & test_store_ack_f[242] & ~test_load_f[242])
        first_valid_store_no_load_id = 242;
    else if (test_valid_f[243] & test_store_f[243] & test_store_ack_f[243] & ~test_load_f[243])
        first_valid_store_no_load_id = 243;
    else if (test_valid_f[244] & test_store_f[244] & test_store_ack_f[244] & ~test_load_f[244])
        first_valid_store_no_load_id = 244;
    else if (test_valid_f[245] & test_store_f[245] & test_store_ack_f[245] & ~test_load_f[245])
        first_valid_store_no_load_id = 245;
    else if (test_valid_f[246] & test_store_f[246] & test_store_ack_f[246] & ~test_load_f[246])
        first_valid_store_no_load_id = 246;
    else if (test_valid_f[247] & test_store_f[247] & test_store_ack_f[247] & ~test_load_f[247])
        first_valid_store_no_load_id = 247;
    else if (test_valid_f[248] & test_store_f[248] & test_store_ack_f[248] & ~test_load_f[248])
        first_valid_store_no_load_id = 248;
    else if (test_valid_f[249] & test_store_f[249] & test_store_ack_f[249] & ~test_load_f[249])
        first_valid_store_no_load_id = 249;
    else if (test_valid_f[250] & test_store_f[250] & test_store_ack_f[250] & ~test_load_f[250])
        first_valid_store_no_load_id = 250;
    else if (test_valid_f[251] & test_store_f[251] & test_store_ack_f[251] & ~test_load_f[251])
        first_valid_store_no_load_id = 251;
    else if (test_valid_f[252] & test_store_f[252] & test_store_ack_f[252] & ~test_load_f[252])
        first_valid_store_no_load_id = 252;
    else if (test_valid_f[253] & test_store_f[253] & test_store_ack_f[253] & ~test_load_f[253])
        first_valid_store_no_load_id = 253;
    else if (test_valid_f[254] & test_store_f[254] & test_store_ack_f[254] & ~test_load_f[254])
        first_valid_store_no_load_id = 254;
    else if (test_valid_f[255] & test_store_f[255] & test_store_ack_f[255] & ~test_load_f[255])
        first_valid_store_no_load_id = 255;


    // Find first entry that is complete
    any_complete = |(test_valid_f & test_store_f & test_store_ack_f & test_load_f & test_load_ack_f);
    if (test_valid_f[0] & test_store_f[0] & test_store_ack_f[0] & test_load_f[0] & test_load_ack_f[0])
        first_complete_id = 0;
    else if (test_valid_f[1] & test_store_f[1] & test_store_ack_f[1] & test_load_f[1] & test_load_ack_f[1])
        first_complete_id = 1;
    else if (test_valid_f[2] & test_store_f[2] & test_store_ack_f[2] & test_load_f[2] & test_load_ack_f[2])
        first_complete_id = 2;
    else if (test_valid_f[3] & test_store_f[3] & test_store_ack_f[3] & test_load_f[3] & test_load_ack_f[3])
        first_complete_id = 3;
    else if (test_valid_f[4] & test_store_f[4] & test_store_ack_f[4] & test_load_f[4] & test_load_ack_f[4])
        first_complete_id = 4;
    else if (test_valid_f[5] & test_store_f[5] & test_store_ack_f[5] & test_load_f[5] & test_load_ack_f[5])
        first_complete_id = 5;
    else if (test_valid_f[6] & test_store_f[6] & test_store_ack_f[6] & test_load_f[6] & test_load_ack_f[6])
        first_complete_id = 6;
    else if (test_valid_f[7] & test_store_f[7] & test_store_ack_f[7] & test_load_f[7] & test_load_ack_f[7])
        first_complete_id = 7;
    else if (test_valid_f[8] & test_store_f[8] & test_store_ack_f[8] & test_load_f[8] & test_load_ack_f[8])
        first_complete_id = 8;
    else if (test_valid_f[9] & test_store_f[9] & test_store_ack_f[9] & test_load_f[9] & test_load_ack_f[9])
        first_complete_id = 9;
    else if (test_valid_f[10] & test_store_f[10] & test_store_ack_f[10] & test_load_f[10] & test_load_ack_f[10])
        first_complete_id = 10;
    else if (test_valid_f[11] & test_store_f[11] & test_store_ack_f[11] & test_load_f[11] & test_load_ack_f[11])
        first_complete_id = 11;
    else if (test_valid_f[12] & test_store_f[12] & test_store_ack_f[12] & test_load_f[12] & test_load_ack_f[12])
        first_complete_id = 12;
    else if (test_valid_f[13] & test_store_f[13] & test_store_ack_f[13] & test_load_f[13] & test_load_ack_f[13])
        first_complete_id = 13;
    else if (test_valid_f[14] & test_store_f[14] & test_store_ack_f[14] & test_load_f[14] & test_load_ack_f[14])
        first_complete_id = 14;
    else if (test_valid_f[15] & test_store_f[15] & test_store_ack_f[15] & test_load_f[15] & test_load_ack_f[15])
        first_complete_id = 15;
    else if (test_valid_f[16] & test_store_f[16] & test_store_ack_f[16] & test_load_f[16] & test_load_ack_f[16])
        first_complete_id = 16;
    else if (test_valid_f[17] & test_store_f[17] & test_store_ack_f[17] & test_load_f[17] & test_load_ack_f[17])
        first_complete_id = 17;
    else if (test_valid_f[18] & test_store_f[18] & test_store_ack_f[18] & test_load_f[18] & test_load_ack_f[18])
        first_complete_id = 18;
    else if (test_valid_f[19] & test_store_f[19] & test_store_ack_f[19] & test_load_f[19] & test_load_ack_f[19])
        first_complete_id = 19;
    else if (test_valid_f[20] & test_store_f[20] & test_store_ack_f[20] & test_load_f[20] & test_load_ack_f[20])
        first_complete_id = 20;
    else if (test_valid_f[21] & test_store_f[21] & test_store_ack_f[21] & test_load_f[21] & test_load_ack_f[21])
        first_complete_id = 21;
    else if (test_valid_f[22] & test_store_f[22] & test_store_ack_f[22] & test_load_f[22] & test_load_ack_f[22])
        first_complete_id = 22;
    else if (test_valid_f[23] & test_store_f[23] & test_store_ack_f[23] & test_load_f[23] & test_load_ack_f[23])
        first_complete_id = 23;
    else if (test_valid_f[24] & test_store_f[24] & test_store_ack_f[24] & test_load_f[24] & test_load_ack_f[24])
        first_complete_id = 24;
    else if (test_valid_f[25] & test_store_f[25] & test_store_ack_f[25] & test_load_f[25] & test_load_ack_f[25])
        first_complete_id = 25;
    else if (test_valid_f[26] & test_store_f[26] & test_store_ack_f[26] & test_load_f[26] & test_load_ack_f[26])
        first_complete_id = 26;
    else if (test_valid_f[27] & test_store_f[27] & test_store_ack_f[27] & test_load_f[27] & test_load_ack_f[27])
        first_complete_id = 27;
    else if (test_valid_f[28] & test_store_f[28] & test_store_ack_f[28] & test_load_f[28] & test_load_ack_f[28])
        first_complete_id = 28;
    else if (test_valid_f[29] & test_store_f[29] & test_store_ack_f[29] & test_load_f[29] & test_load_ack_f[29])
        first_complete_id = 29;
    else if (test_valid_f[30] & test_store_f[30] & test_store_ack_f[30] & test_load_f[30] & test_load_ack_f[30])
        first_complete_id = 30;
    else if (test_valid_f[31] & test_store_f[31] & test_store_ack_f[31] & test_load_f[31] & test_load_ack_f[31])
        first_complete_id = 31;
    else if (test_valid_f[32] & test_store_f[32] & test_store_ack_f[32] & test_load_f[32] & test_load_ack_f[32])
        first_complete_id = 32;
    else if (test_valid_f[33] & test_store_f[33] & test_store_ack_f[33] & test_load_f[33] & test_load_ack_f[33])
        first_complete_id = 33;
    else if (test_valid_f[34] & test_store_f[34] & test_store_ack_f[34] & test_load_f[34] & test_load_ack_f[34])
        first_complete_id = 34;
    else if (test_valid_f[35] & test_store_f[35] & test_store_ack_f[35] & test_load_f[35] & test_load_ack_f[35])
        first_complete_id = 35;
    else if (test_valid_f[36] & test_store_f[36] & test_store_ack_f[36] & test_load_f[36] & test_load_ack_f[36])
        first_complete_id = 36;
    else if (test_valid_f[37] & test_store_f[37] & test_store_ack_f[37] & test_load_f[37] & test_load_ack_f[37])
        first_complete_id = 37;
    else if (test_valid_f[38] & test_store_f[38] & test_store_ack_f[38] & test_load_f[38] & test_load_ack_f[38])
        first_complete_id = 38;
    else if (test_valid_f[39] & test_store_f[39] & test_store_ack_f[39] & test_load_f[39] & test_load_ack_f[39])
        first_complete_id = 39;
    else if (test_valid_f[40] & test_store_f[40] & test_store_ack_f[40] & test_load_f[40] & test_load_ack_f[40])
        first_complete_id = 40;
    else if (test_valid_f[41] & test_store_f[41] & test_store_ack_f[41] & test_load_f[41] & test_load_ack_f[41])
        first_complete_id = 41;
    else if (test_valid_f[42] & test_store_f[42] & test_store_ack_f[42] & test_load_f[42] & test_load_ack_f[42])
        first_complete_id = 42;
    else if (test_valid_f[43] & test_store_f[43] & test_store_ack_f[43] & test_load_f[43] & test_load_ack_f[43])
        first_complete_id = 43;
    else if (test_valid_f[44] & test_store_f[44] & test_store_ack_f[44] & test_load_f[44] & test_load_ack_f[44])
        first_complete_id = 44;
    else if (test_valid_f[45] & test_store_f[45] & test_store_ack_f[45] & test_load_f[45] & test_load_ack_f[45])
        first_complete_id = 45;
    else if (test_valid_f[46] & test_store_f[46] & test_store_ack_f[46] & test_load_f[46] & test_load_ack_f[46])
        first_complete_id = 46;
    else if (test_valid_f[47] & test_store_f[47] & test_store_ack_f[47] & test_load_f[47] & test_load_ack_f[47])
        first_complete_id = 47;
    else if (test_valid_f[48] & test_store_f[48] & test_store_ack_f[48] & test_load_f[48] & test_load_ack_f[48])
        first_complete_id = 48;
    else if (test_valid_f[49] & test_store_f[49] & test_store_ack_f[49] & test_load_f[49] & test_load_ack_f[49])
        first_complete_id = 49;
    else if (test_valid_f[50] & test_store_f[50] & test_store_ack_f[50] & test_load_f[50] & test_load_ack_f[50])
        first_complete_id = 50;
    else if (test_valid_f[51] & test_store_f[51] & test_store_ack_f[51] & test_load_f[51] & test_load_ack_f[51])
        first_complete_id = 51;
    else if (test_valid_f[52] & test_store_f[52] & test_store_ack_f[52] & test_load_f[52] & test_load_ack_f[52])
        first_complete_id = 52;
    else if (test_valid_f[53] & test_store_f[53] & test_store_ack_f[53] & test_load_f[53] & test_load_ack_f[53])
        first_complete_id = 53;
    else if (test_valid_f[54] & test_store_f[54] & test_store_ack_f[54] & test_load_f[54] & test_load_ack_f[54])
        first_complete_id = 54;
    else if (test_valid_f[55] & test_store_f[55] & test_store_ack_f[55] & test_load_f[55] & test_load_ack_f[55])
        first_complete_id = 55;
    else if (test_valid_f[56] & test_store_f[56] & test_store_ack_f[56] & test_load_f[56] & test_load_ack_f[56])
        first_complete_id = 56;
    else if (test_valid_f[57] & test_store_f[57] & test_store_ack_f[57] & test_load_f[57] & test_load_ack_f[57])
        first_complete_id = 57;
    else if (test_valid_f[58] & test_store_f[58] & test_store_ack_f[58] & test_load_f[58] & test_load_ack_f[58])
        first_complete_id = 58;
    else if (test_valid_f[59] & test_store_f[59] & test_store_ack_f[59] & test_load_f[59] & test_load_ack_f[59])
        first_complete_id = 59;
    else if (test_valid_f[60] & test_store_f[60] & test_store_ack_f[60] & test_load_f[60] & test_load_ack_f[60])
        first_complete_id = 60;
    else if (test_valid_f[61] & test_store_f[61] & test_store_ack_f[61] & test_load_f[61] & test_load_ack_f[61])
        first_complete_id = 61;
    else if (test_valid_f[62] & test_store_f[62] & test_store_ack_f[62] & test_load_f[62] & test_load_ack_f[62])
        first_complete_id = 62;
    else if (test_valid_f[63] & test_store_f[63] & test_store_ack_f[63] & test_load_f[63] & test_load_ack_f[63])
        first_complete_id = 63;
    else if (test_valid_f[64] & test_store_f[64] & test_store_ack_f[64] & test_load_f[64] & test_load_ack_f[64])
        first_complete_id = 64;
    else if (test_valid_f[65] & test_store_f[65] & test_store_ack_f[65] & test_load_f[65] & test_load_ack_f[65])
        first_complete_id = 65;
    else if (test_valid_f[66] & test_store_f[66] & test_store_ack_f[66] & test_load_f[66] & test_load_ack_f[66])
        first_complete_id = 66;
    else if (test_valid_f[67] & test_store_f[67] & test_store_ack_f[67] & test_load_f[67] & test_load_ack_f[67])
        first_complete_id = 67;
    else if (test_valid_f[68] & test_store_f[68] & test_store_ack_f[68] & test_load_f[68] & test_load_ack_f[68])
        first_complete_id = 68;
    else if (test_valid_f[69] & test_store_f[69] & test_store_ack_f[69] & test_load_f[69] & test_load_ack_f[69])
        first_complete_id = 69;
    else if (test_valid_f[70] & test_store_f[70] & test_store_ack_f[70] & test_load_f[70] & test_load_ack_f[70])
        first_complete_id = 70;
    else if (test_valid_f[71] & test_store_f[71] & test_store_ack_f[71] & test_load_f[71] & test_load_ack_f[71])
        first_complete_id = 71;
    else if (test_valid_f[72] & test_store_f[72] & test_store_ack_f[72] & test_load_f[72] & test_load_ack_f[72])
        first_complete_id = 72;
    else if (test_valid_f[73] & test_store_f[73] & test_store_ack_f[73] & test_load_f[73] & test_load_ack_f[73])
        first_complete_id = 73;
    else if (test_valid_f[74] & test_store_f[74] & test_store_ack_f[74] & test_load_f[74] & test_load_ack_f[74])
        first_complete_id = 74;
    else if (test_valid_f[75] & test_store_f[75] & test_store_ack_f[75] & test_load_f[75] & test_load_ack_f[75])
        first_complete_id = 75;
    else if (test_valid_f[76] & test_store_f[76] & test_store_ack_f[76] & test_load_f[76] & test_load_ack_f[76])
        first_complete_id = 76;
    else if (test_valid_f[77] & test_store_f[77] & test_store_ack_f[77] & test_load_f[77] & test_load_ack_f[77])
        first_complete_id = 77;
    else if (test_valid_f[78] & test_store_f[78] & test_store_ack_f[78] & test_load_f[78] & test_load_ack_f[78])
        first_complete_id = 78;
    else if (test_valid_f[79] & test_store_f[79] & test_store_ack_f[79] & test_load_f[79] & test_load_ack_f[79])
        first_complete_id = 79;
    else if (test_valid_f[80] & test_store_f[80] & test_store_ack_f[80] & test_load_f[80] & test_load_ack_f[80])
        first_complete_id = 80;
    else if (test_valid_f[81] & test_store_f[81] & test_store_ack_f[81] & test_load_f[81] & test_load_ack_f[81])
        first_complete_id = 81;
    else if (test_valid_f[82] & test_store_f[82] & test_store_ack_f[82] & test_load_f[82] & test_load_ack_f[82])
        first_complete_id = 82;
    else if (test_valid_f[83] & test_store_f[83] & test_store_ack_f[83] & test_load_f[83] & test_load_ack_f[83])
        first_complete_id = 83;
    else if (test_valid_f[84] & test_store_f[84] & test_store_ack_f[84] & test_load_f[84] & test_load_ack_f[84])
        first_complete_id = 84;
    else if (test_valid_f[85] & test_store_f[85] & test_store_ack_f[85] & test_load_f[85] & test_load_ack_f[85])
        first_complete_id = 85;
    else if (test_valid_f[86] & test_store_f[86] & test_store_ack_f[86] & test_load_f[86] & test_load_ack_f[86])
        first_complete_id = 86;
    else if (test_valid_f[87] & test_store_f[87] & test_store_ack_f[87] & test_load_f[87] & test_load_ack_f[87])
        first_complete_id = 87;
    else if (test_valid_f[88] & test_store_f[88] & test_store_ack_f[88] & test_load_f[88] & test_load_ack_f[88])
        first_complete_id = 88;
    else if (test_valid_f[89] & test_store_f[89] & test_store_ack_f[89] & test_load_f[89] & test_load_ack_f[89])
        first_complete_id = 89;
    else if (test_valid_f[90] & test_store_f[90] & test_store_ack_f[90] & test_load_f[90] & test_load_ack_f[90])
        first_complete_id = 90;
    else if (test_valid_f[91] & test_store_f[91] & test_store_ack_f[91] & test_load_f[91] & test_load_ack_f[91])
        first_complete_id = 91;
    else if (test_valid_f[92] & test_store_f[92] & test_store_ack_f[92] & test_load_f[92] & test_load_ack_f[92])
        first_complete_id = 92;
    else if (test_valid_f[93] & test_store_f[93] & test_store_ack_f[93] & test_load_f[93] & test_load_ack_f[93])
        first_complete_id = 93;
    else if (test_valid_f[94] & test_store_f[94] & test_store_ack_f[94] & test_load_f[94] & test_load_ack_f[94])
        first_complete_id = 94;
    else if (test_valid_f[95] & test_store_f[95] & test_store_ack_f[95] & test_load_f[95] & test_load_ack_f[95])
        first_complete_id = 95;
    else if (test_valid_f[96] & test_store_f[96] & test_store_ack_f[96] & test_load_f[96] & test_load_ack_f[96])
        first_complete_id = 96;
    else if (test_valid_f[97] & test_store_f[97] & test_store_ack_f[97] & test_load_f[97] & test_load_ack_f[97])
        first_complete_id = 97;
    else if (test_valid_f[98] & test_store_f[98] & test_store_ack_f[98] & test_load_f[98] & test_load_ack_f[98])
        first_complete_id = 98;
    else if (test_valid_f[99] & test_store_f[99] & test_store_ack_f[99] & test_load_f[99] & test_load_ack_f[99])
        first_complete_id = 99;
    else if (test_valid_f[100] & test_store_f[100] & test_store_ack_f[100] & test_load_f[100] & test_load_ack_f[100])
        first_complete_id = 100;
    else if (test_valid_f[101] & test_store_f[101] & test_store_ack_f[101] & test_load_f[101] & test_load_ack_f[101])
        first_complete_id = 101;
    else if (test_valid_f[102] & test_store_f[102] & test_store_ack_f[102] & test_load_f[102] & test_load_ack_f[102])
        first_complete_id = 102;
    else if (test_valid_f[103] & test_store_f[103] & test_store_ack_f[103] & test_load_f[103] & test_load_ack_f[103])
        first_complete_id = 103;
    else if (test_valid_f[104] & test_store_f[104] & test_store_ack_f[104] & test_load_f[104] & test_load_ack_f[104])
        first_complete_id = 104;
    else if (test_valid_f[105] & test_store_f[105] & test_store_ack_f[105] & test_load_f[105] & test_load_ack_f[105])
        first_complete_id = 105;
    else if (test_valid_f[106] & test_store_f[106] & test_store_ack_f[106] & test_load_f[106] & test_load_ack_f[106])
        first_complete_id = 106;
    else if (test_valid_f[107] & test_store_f[107] & test_store_ack_f[107] & test_load_f[107] & test_load_ack_f[107])
        first_complete_id = 107;
    else if (test_valid_f[108] & test_store_f[108] & test_store_ack_f[108] & test_load_f[108] & test_load_ack_f[108])
        first_complete_id = 108;
    else if (test_valid_f[109] & test_store_f[109] & test_store_ack_f[109] & test_load_f[109] & test_load_ack_f[109])
        first_complete_id = 109;
    else if (test_valid_f[110] & test_store_f[110] & test_store_ack_f[110] & test_load_f[110] & test_load_ack_f[110])
        first_complete_id = 110;
    else if (test_valid_f[111] & test_store_f[111] & test_store_ack_f[111] & test_load_f[111] & test_load_ack_f[111])
        first_complete_id = 111;
    else if (test_valid_f[112] & test_store_f[112] & test_store_ack_f[112] & test_load_f[112] & test_load_ack_f[112])
        first_complete_id = 112;
    else if (test_valid_f[113] & test_store_f[113] & test_store_ack_f[113] & test_load_f[113] & test_load_ack_f[113])
        first_complete_id = 113;
    else if (test_valid_f[114] & test_store_f[114] & test_store_ack_f[114] & test_load_f[114] & test_load_ack_f[114])
        first_complete_id = 114;
    else if (test_valid_f[115] & test_store_f[115] & test_store_ack_f[115] & test_load_f[115] & test_load_ack_f[115])
        first_complete_id = 115;
    else if (test_valid_f[116] & test_store_f[116] & test_store_ack_f[116] & test_load_f[116] & test_load_ack_f[116])
        first_complete_id = 116;
    else if (test_valid_f[117] & test_store_f[117] & test_store_ack_f[117] & test_load_f[117] & test_load_ack_f[117])
        first_complete_id = 117;
    else if (test_valid_f[118] & test_store_f[118] & test_store_ack_f[118] & test_load_f[118] & test_load_ack_f[118])
        first_complete_id = 118;
    else if (test_valid_f[119] & test_store_f[119] & test_store_ack_f[119] & test_load_f[119] & test_load_ack_f[119])
        first_complete_id = 119;
    else if (test_valid_f[120] & test_store_f[120] & test_store_ack_f[120] & test_load_f[120] & test_load_ack_f[120])
        first_complete_id = 120;
    else if (test_valid_f[121] & test_store_f[121] & test_store_ack_f[121] & test_load_f[121] & test_load_ack_f[121])
        first_complete_id = 121;
    else if (test_valid_f[122] & test_store_f[122] & test_store_ack_f[122] & test_load_f[122] & test_load_ack_f[122])
        first_complete_id = 122;
    else if (test_valid_f[123] & test_store_f[123] & test_store_ack_f[123] & test_load_f[123] & test_load_ack_f[123])
        first_complete_id = 123;
    else if (test_valid_f[124] & test_store_f[124] & test_store_ack_f[124] & test_load_f[124] & test_load_ack_f[124])
        first_complete_id = 124;
    else if (test_valid_f[125] & test_store_f[125] & test_store_ack_f[125] & test_load_f[125] & test_load_ack_f[125])
        first_complete_id = 125;
    else if (test_valid_f[126] & test_store_f[126] & test_store_ack_f[126] & test_load_f[126] & test_load_ack_f[126])
        first_complete_id = 126;
    else if (test_valid_f[127] & test_store_f[127] & test_store_ack_f[127] & test_load_f[127] & test_load_ack_f[127])
        first_complete_id = 127;
    else if (test_valid_f[128] & test_store_f[128] & test_store_ack_f[128] & test_load_f[128] & test_load_ack_f[128])
        first_complete_id = 128;
    else if (test_valid_f[129] & test_store_f[129] & test_store_ack_f[129] & test_load_f[129] & test_load_ack_f[129])
        first_complete_id = 129;
    else if (test_valid_f[130] & test_store_f[130] & test_store_ack_f[130] & test_load_f[130] & test_load_ack_f[130])
        first_complete_id = 130;
    else if (test_valid_f[131] & test_store_f[131] & test_store_ack_f[131] & test_load_f[131] & test_load_ack_f[131])
        first_complete_id = 131;
    else if (test_valid_f[132] & test_store_f[132] & test_store_ack_f[132] & test_load_f[132] & test_load_ack_f[132])
        first_complete_id = 132;
    else if (test_valid_f[133] & test_store_f[133] & test_store_ack_f[133] & test_load_f[133] & test_load_ack_f[133])
        first_complete_id = 133;
    else if (test_valid_f[134] & test_store_f[134] & test_store_ack_f[134] & test_load_f[134] & test_load_ack_f[134])
        first_complete_id = 134;
    else if (test_valid_f[135] & test_store_f[135] & test_store_ack_f[135] & test_load_f[135] & test_load_ack_f[135])
        first_complete_id = 135;
    else if (test_valid_f[136] & test_store_f[136] & test_store_ack_f[136] & test_load_f[136] & test_load_ack_f[136])
        first_complete_id = 136;
    else if (test_valid_f[137] & test_store_f[137] & test_store_ack_f[137] & test_load_f[137] & test_load_ack_f[137])
        first_complete_id = 137;
    else if (test_valid_f[138] & test_store_f[138] & test_store_ack_f[138] & test_load_f[138] & test_load_ack_f[138])
        first_complete_id = 138;
    else if (test_valid_f[139] & test_store_f[139] & test_store_ack_f[139] & test_load_f[139] & test_load_ack_f[139])
        first_complete_id = 139;
    else if (test_valid_f[140] & test_store_f[140] & test_store_ack_f[140] & test_load_f[140] & test_load_ack_f[140])
        first_complete_id = 140;
    else if (test_valid_f[141] & test_store_f[141] & test_store_ack_f[141] & test_load_f[141] & test_load_ack_f[141])
        first_complete_id = 141;
    else if (test_valid_f[142] & test_store_f[142] & test_store_ack_f[142] & test_load_f[142] & test_load_ack_f[142])
        first_complete_id = 142;
    else if (test_valid_f[143] & test_store_f[143] & test_store_ack_f[143] & test_load_f[143] & test_load_ack_f[143])
        first_complete_id = 143;
    else if (test_valid_f[144] & test_store_f[144] & test_store_ack_f[144] & test_load_f[144] & test_load_ack_f[144])
        first_complete_id = 144;
    else if (test_valid_f[145] & test_store_f[145] & test_store_ack_f[145] & test_load_f[145] & test_load_ack_f[145])
        first_complete_id = 145;
    else if (test_valid_f[146] & test_store_f[146] & test_store_ack_f[146] & test_load_f[146] & test_load_ack_f[146])
        first_complete_id = 146;
    else if (test_valid_f[147] & test_store_f[147] & test_store_ack_f[147] & test_load_f[147] & test_load_ack_f[147])
        first_complete_id = 147;
    else if (test_valid_f[148] & test_store_f[148] & test_store_ack_f[148] & test_load_f[148] & test_load_ack_f[148])
        first_complete_id = 148;
    else if (test_valid_f[149] & test_store_f[149] & test_store_ack_f[149] & test_load_f[149] & test_load_ack_f[149])
        first_complete_id = 149;
    else if (test_valid_f[150] & test_store_f[150] & test_store_ack_f[150] & test_load_f[150] & test_load_ack_f[150])
        first_complete_id = 150;
    else if (test_valid_f[151] & test_store_f[151] & test_store_ack_f[151] & test_load_f[151] & test_load_ack_f[151])
        first_complete_id = 151;
    else if (test_valid_f[152] & test_store_f[152] & test_store_ack_f[152] & test_load_f[152] & test_load_ack_f[152])
        first_complete_id = 152;
    else if (test_valid_f[153] & test_store_f[153] & test_store_ack_f[153] & test_load_f[153] & test_load_ack_f[153])
        first_complete_id = 153;
    else if (test_valid_f[154] & test_store_f[154] & test_store_ack_f[154] & test_load_f[154] & test_load_ack_f[154])
        first_complete_id = 154;
    else if (test_valid_f[155] & test_store_f[155] & test_store_ack_f[155] & test_load_f[155] & test_load_ack_f[155])
        first_complete_id = 155;
    else if (test_valid_f[156] & test_store_f[156] & test_store_ack_f[156] & test_load_f[156] & test_load_ack_f[156])
        first_complete_id = 156;
    else if (test_valid_f[157] & test_store_f[157] & test_store_ack_f[157] & test_load_f[157] & test_load_ack_f[157])
        first_complete_id = 157;
    else if (test_valid_f[158] & test_store_f[158] & test_store_ack_f[158] & test_load_f[158] & test_load_ack_f[158])
        first_complete_id = 158;
    else if (test_valid_f[159] & test_store_f[159] & test_store_ack_f[159] & test_load_f[159] & test_load_ack_f[159])
        first_complete_id = 159;
    else if (test_valid_f[160] & test_store_f[160] & test_store_ack_f[160] & test_load_f[160] & test_load_ack_f[160])
        first_complete_id = 160;
    else if (test_valid_f[161] & test_store_f[161] & test_store_ack_f[161] & test_load_f[161] & test_load_ack_f[161])
        first_complete_id = 161;
    else if (test_valid_f[162] & test_store_f[162] & test_store_ack_f[162] & test_load_f[162] & test_load_ack_f[162])
        first_complete_id = 162;
    else if (test_valid_f[163] & test_store_f[163] & test_store_ack_f[163] & test_load_f[163] & test_load_ack_f[163])
        first_complete_id = 163;
    else if (test_valid_f[164] & test_store_f[164] & test_store_ack_f[164] & test_load_f[164] & test_load_ack_f[164])
        first_complete_id = 164;
    else if (test_valid_f[165] & test_store_f[165] & test_store_ack_f[165] & test_load_f[165] & test_load_ack_f[165])
        first_complete_id = 165;
    else if (test_valid_f[166] & test_store_f[166] & test_store_ack_f[166] & test_load_f[166] & test_load_ack_f[166])
        first_complete_id = 166;
    else if (test_valid_f[167] & test_store_f[167] & test_store_ack_f[167] & test_load_f[167] & test_load_ack_f[167])
        first_complete_id = 167;
    else if (test_valid_f[168] & test_store_f[168] & test_store_ack_f[168] & test_load_f[168] & test_load_ack_f[168])
        first_complete_id = 168;
    else if (test_valid_f[169] & test_store_f[169] & test_store_ack_f[169] & test_load_f[169] & test_load_ack_f[169])
        first_complete_id = 169;
    else if (test_valid_f[170] & test_store_f[170] & test_store_ack_f[170] & test_load_f[170] & test_load_ack_f[170])
        first_complete_id = 170;
    else if (test_valid_f[171] & test_store_f[171] & test_store_ack_f[171] & test_load_f[171] & test_load_ack_f[171])
        first_complete_id = 171;
    else if (test_valid_f[172] & test_store_f[172] & test_store_ack_f[172] & test_load_f[172] & test_load_ack_f[172])
        first_complete_id = 172;
    else if (test_valid_f[173] & test_store_f[173] & test_store_ack_f[173] & test_load_f[173] & test_load_ack_f[173])
        first_complete_id = 173;
    else if (test_valid_f[174] & test_store_f[174] & test_store_ack_f[174] & test_load_f[174] & test_load_ack_f[174])
        first_complete_id = 174;
    else if (test_valid_f[175] & test_store_f[175] & test_store_ack_f[175] & test_load_f[175] & test_load_ack_f[175])
        first_complete_id = 175;
    else if (test_valid_f[176] & test_store_f[176] & test_store_ack_f[176] & test_load_f[176] & test_load_ack_f[176])
        first_complete_id = 176;
    else if (test_valid_f[177] & test_store_f[177] & test_store_ack_f[177] & test_load_f[177] & test_load_ack_f[177])
        first_complete_id = 177;
    else if (test_valid_f[178] & test_store_f[178] & test_store_ack_f[178] & test_load_f[178] & test_load_ack_f[178])
        first_complete_id = 178;
    else if (test_valid_f[179] & test_store_f[179] & test_store_ack_f[179] & test_load_f[179] & test_load_ack_f[179])
        first_complete_id = 179;
    else if (test_valid_f[180] & test_store_f[180] & test_store_ack_f[180] & test_load_f[180] & test_load_ack_f[180])
        first_complete_id = 180;
    else if (test_valid_f[181] & test_store_f[181] & test_store_ack_f[181] & test_load_f[181] & test_load_ack_f[181])
        first_complete_id = 181;
    else if (test_valid_f[182] & test_store_f[182] & test_store_ack_f[182] & test_load_f[182] & test_load_ack_f[182])
        first_complete_id = 182;
    else if (test_valid_f[183] & test_store_f[183] & test_store_ack_f[183] & test_load_f[183] & test_load_ack_f[183])
        first_complete_id = 183;
    else if (test_valid_f[184] & test_store_f[184] & test_store_ack_f[184] & test_load_f[184] & test_load_ack_f[184])
        first_complete_id = 184;
    else if (test_valid_f[185] & test_store_f[185] & test_store_ack_f[185] & test_load_f[185] & test_load_ack_f[185])
        first_complete_id = 185;
    else if (test_valid_f[186] & test_store_f[186] & test_store_ack_f[186] & test_load_f[186] & test_load_ack_f[186])
        first_complete_id = 186;
    else if (test_valid_f[187] & test_store_f[187] & test_store_ack_f[187] & test_load_f[187] & test_load_ack_f[187])
        first_complete_id = 187;
    else if (test_valid_f[188] & test_store_f[188] & test_store_ack_f[188] & test_load_f[188] & test_load_ack_f[188])
        first_complete_id = 188;
    else if (test_valid_f[189] & test_store_f[189] & test_store_ack_f[189] & test_load_f[189] & test_load_ack_f[189])
        first_complete_id = 189;
    else if (test_valid_f[190] & test_store_f[190] & test_store_ack_f[190] & test_load_f[190] & test_load_ack_f[190])
        first_complete_id = 190;
    else if (test_valid_f[191] & test_store_f[191] & test_store_ack_f[191] & test_load_f[191] & test_load_ack_f[191])
        first_complete_id = 191;
    else if (test_valid_f[192] & test_store_f[192] & test_store_ack_f[192] & test_load_f[192] & test_load_ack_f[192])
        first_complete_id = 192;
    else if (test_valid_f[193] & test_store_f[193] & test_store_ack_f[193] & test_load_f[193] & test_load_ack_f[193])
        first_complete_id = 193;
    else if (test_valid_f[194] & test_store_f[194] & test_store_ack_f[194] & test_load_f[194] & test_load_ack_f[194])
        first_complete_id = 194;
    else if (test_valid_f[195] & test_store_f[195] & test_store_ack_f[195] & test_load_f[195] & test_load_ack_f[195])
        first_complete_id = 195;
    else if (test_valid_f[196] & test_store_f[196] & test_store_ack_f[196] & test_load_f[196] & test_load_ack_f[196])
        first_complete_id = 196;
    else if (test_valid_f[197] & test_store_f[197] & test_store_ack_f[197] & test_load_f[197] & test_load_ack_f[197])
        first_complete_id = 197;
    else if (test_valid_f[198] & test_store_f[198] & test_store_ack_f[198] & test_load_f[198] & test_load_ack_f[198])
        first_complete_id = 198;
    else if (test_valid_f[199] & test_store_f[199] & test_store_ack_f[199] & test_load_f[199] & test_load_ack_f[199])
        first_complete_id = 199;
    else if (test_valid_f[200] & test_store_f[200] & test_store_ack_f[200] & test_load_f[200] & test_load_ack_f[200])
        first_complete_id = 200;
    else if (test_valid_f[201] & test_store_f[201] & test_store_ack_f[201] & test_load_f[201] & test_load_ack_f[201])
        first_complete_id = 201;
    else if (test_valid_f[202] & test_store_f[202] & test_store_ack_f[202] & test_load_f[202] & test_load_ack_f[202])
        first_complete_id = 202;
    else if (test_valid_f[203] & test_store_f[203] & test_store_ack_f[203] & test_load_f[203] & test_load_ack_f[203])
        first_complete_id = 203;
    else if (test_valid_f[204] & test_store_f[204] & test_store_ack_f[204] & test_load_f[204] & test_load_ack_f[204])
        first_complete_id = 204;
    else if (test_valid_f[205] & test_store_f[205] & test_store_ack_f[205] & test_load_f[205] & test_load_ack_f[205])
        first_complete_id = 205;
    else if (test_valid_f[206] & test_store_f[206] & test_store_ack_f[206] & test_load_f[206] & test_load_ack_f[206])
        first_complete_id = 206;
    else if (test_valid_f[207] & test_store_f[207] & test_store_ack_f[207] & test_load_f[207] & test_load_ack_f[207])
        first_complete_id = 207;
    else if (test_valid_f[208] & test_store_f[208] & test_store_ack_f[208] & test_load_f[208] & test_load_ack_f[208])
        first_complete_id = 208;
    else if (test_valid_f[209] & test_store_f[209] & test_store_ack_f[209] & test_load_f[209] & test_load_ack_f[209])
        first_complete_id = 209;
    else if (test_valid_f[210] & test_store_f[210] & test_store_ack_f[210] & test_load_f[210] & test_load_ack_f[210])
        first_complete_id = 210;
    else if (test_valid_f[211] & test_store_f[211] & test_store_ack_f[211] & test_load_f[211] & test_load_ack_f[211])
        first_complete_id = 211;
    else if (test_valid_f[212] & test_store_f[212] & test_store_ack_f[212] & test_load_f[212] & test_load_ack_f[212])
        first_complete_id = 212;
    else if (test_valid_f[213] & test_store_f[213] & test_store_ack_f[213] & test_load_f[213] & test_load_ack_f[213])
        first_complete_id = 213;
    else if (test_valid_f[214] & test_store_f[214] & test_store_ack_f[214] & test_load_f[214] & test_load_ack_f[214])
        first_complete_id = 214;
    else if (test_valid_f[215] & test_store_f[215] & test_store_ack_f[215] & test_load_f[215] & test_load_ack_f[215])
        first_complete_id = 215;
    else if (test_valid_f[216] & test_store_f[216] & test_store_ack_f[216] & test_load_f[216] & test_load_ack_f[216])
        first_complete_id = 216;
    else if (test_valid_f[217] & test_store_f[217] & test_store_ack_f[217] & test_load_f[217] & test_load_ack_f[217])
        first_complete_id = 217;
    else if (test_valid_f[218] & test_store_f[218] & test_store_ack_f[218] & test_load_f[218] & test_load_ack_f[218])
        first_complete_id = 218;
    else if (test_valid_f[219] & test_store_f[219] & test_store_ack_f[219] & test_load_f[219] & test_load_ack_f[219])
        first_complete_id = 219;
    else if (test_valid_f[220] & test_store_f[220] & test_store_ack_f[220] & test_load_f[220] & test_load_ack_f[220])
        first_complete_id = 220;
    else if (test_valid_f[221] & test_store_f[221] & test_store_ack_f[221] & test_load_f[221] & test_load_ack_f[221])
        first_complete_id = 221;
    else if (test_valid_f[222] & test_store_f[222] & test_store_ack_f[222] & test_load_f[222] & test_load_ack_f[222])
        first_complete_id = 222;
    else if (test_valid_f[223] & test_store_f[223] & test_store_ack_f[223] & test_load_f[223] & test_load_ack_f[223])
        first_complete_id = 223;
    else if (test_valid_f[224] & test_store_f[224] & test_store_ack_f[224] & test_load_f[224] & test_load_ack_f[224])
        first_complete_id = 224;
    else if (test_valid_f[225] & test_store_f[225] & test_store_ack_f[225] & test_load_f[225] & test_load_ack_f[225])
        first_complete_id = 225;
    else if (test_valid_f[226] & test_store_f[226] & test_store_ack_f[226] & test_load_f[226] & test_load_ack_f[226])
        first_complete_id = 226;
    else if (test_valid_f[227] & test_store_f[227] & test_store_ack_f[227] & test_load_f[227] & test_load_ack_f[227])
        first_complete_id = 227;
    else if (test_valid_f[228] & test_store_f[228] & test_store_ack_f[228] & test_load_f[228] & test_load_ack_f[228])
        first_complete_id = 228;
    else if (test_valid_f[229] & test_store_f[229] & test_store_ack_f[229] & test_load_f[229] & test_load_ack_f[229])
        first_complete_id = 229;
    else if (test_valid_f[230] & test_store_f[230] & test_store_ack_f[230] & test_load_f[230] & test_load_ack_f[230])
        first_complete_id = 230;
    else if (test_valid_f[231] & test_store_f[231] & test_store_ack_f[231] & test_load_f[231] & test_load_ack_f[231])
        first_complete_id = 231;
    else if (test_valid_f[232] & test_store_f[232] & test_store_ack_f[232] & test_load_f[232] & test_load_ack_f[232])
        first_complete_id = 232;
    else if (test_valid_f[233] & test_store_f[233] & test_store_ack_f[233] & test_load_f[233] & test_load_ack_f[233])
        first_complete_id = 233;
    else if (test_valid_f[234] & test_store_f[234] & test_store_ack_f[234] & test_load_f[234] & test_load_ack_f[234])
        first_complete_id = 234;
    else if (test_valid_f[235] & test_store_f[235] & test_store_ack_f[235] & test_load_f[235] & test_load_ack_f[235])
        first_complete_id = 235;
    else if (test_valid_f[236] & test_store_f[236] & test_store_ack_f[236] & test_load_f[236] & test_load_ack_f[236])
        first_complete_id = 236;
    else if (test_valid_f[237] & test_store_f[237] & test_store_ack_f[237] & test_load_f[237] & test_load_ack_f[237])
        first_complete_id = 237;
    else if (test_valid_f[238] & test_store_f[238] & test_store_ack_f[238] & test_load_f[238] & test_load_ack_f[238])
        first_complete_id = 238;
    else if (test_valid_f[239] & test_store_f[239] & test_store_ack_f[239] & test_load_f[239] & test_load_ack_f[239])
        first_complete_id = 239;
    else if (test_valid_f[240] & test_store_f[240] & test_store_ack_f[240] & test_load_f[240] & test_load_ack_f[240])
        first_complete_id = 240;
    else if (test_valid_f[241] & test_store_f[241] & test_store_ack_f[241] & test_load_f[241] & test_load_ack_f[241])
        first_complete_id = 241;
    else if (test_valid_f[242] & test_store_f[242] & test_store_ack_f[242] & test_load_f[242] & test_load_ack_f[242])
        first_complete_id = 242;
    else if (test_valid_f[243] & test_store_f[243] & test_store_ack_f[243] & test_load_f[243] & test_load_ack_f[243])
        first_complete_id = 243;
    else if (test_valid_f[244] & test_store_f[244] & test_store_ack_f[244] & test_load_f[244] & test_load_ack_f[244])
        first_complete_id = 244;
    else if (test_valid_f[245] & test_store_f[245] & test_store_ack_f[245] & test_load_f[245] & test_load_ack_f[245])
        first_complete_id = 245;
    else if (test_valid_f[246] & test_store_f[246] & test_store_ack_f[246] & test_load_f[246] & test_load_ack_f[246])
        first_complete_id = 246;
    else if (test_valid_f[247] & test_store_f[247] & test_store_ack_f[247] & test_load_f[247] & test_load_ack_f[247])
        first_complete_id = 247;
    else if (test_valid_f[248] & test_store_f[248] & test_store_ack_f[248] & test_load_f[248] & test_load_ack_f[248])
        first_complete_id = 248;
    else if (test_valid_f[249] & test_store_f[249] & test_store_ack_f[249] & test_load_f[249] & test_load_ack_f[249])
        first_complete_id = 249;
    else if (test_valid_f[250] & test_store_f[250] & test_store_ack_f[250] & test_load_f[250] & test_load_ack_f[250])
        first_complete_id = 250;
    else if (test_valid_f[251] & test_store_f[251] & test_store_ack_f[251] & test_load_f[251] & test_load_ack_f[251])
        first_complete_id = 251;
    else if (test_valid_f[252] & test_store_f[252] & test_store_ack_f[252] & test_load_f[252] & test_load_ack_f[252])
        first_complete_id = 252;
    else if (test_valid_f[253] & test_store_f[253] & test_store_ack_f[253] & test_load_f[253] & test_load_ack_f[253])
        first_complete_id = 253;
    else if (test_valid_f[254] & test_store_f[254] & test_store_ack_f[254] & test_load_f[254] & test_load_ack_f[254])
        first_complete_id = 254;
    else if (test_valid_f[255] & test_store_f[255] & test_store_ack_f[255] & test_load_f[255] & test_load_ack_f[255])
        first_complete_id = 255;

end

// Address/data generation and MSHR satisfied logic
always @ *
begin
    // Default values
    test_valid_next = test_valid_f;
    test_address_next = test_address_f[first_invalid_id];
    test_data_next = test_data_f[first_invalid_id];
    last_inserted_address_next = last_inserted_address_f;
    last_inserted_data_next = last_inserted_data_f;

    // Insert valid entry
    // We can insert in reset state, as some addr/data generators
    // actually need us to latch the initial value to know what
    // the next value is (purely cominbational addr/data generators)
    if ((test_running || (test_state_reset && en)) && ~gen_done && any_invalid && gen_addrdata_next_val)
    begin
        test_valid_next[first_invalid_id] = 1'b1;
        test_address_next = gen_address_next;
        test_data_next = gen_data_next;
        last_inserted_address_next = gen_address_next;
        last_inserted_data_next = gen_data_next;
    end

    // Clear complete entry
    if (test_running && any_complete)
        test_valid_next[first_complete_id] = 1'b0;
end

// Sending logic, loads and stores
always @ *
begin
    // Default values
    test_mem_val = 1'b0;
    test_mem_data = {`NOC_DATA_WIDTH{1'bx}};
    flits_to_send_next = flits_to_send_f;
    flit_send_buffer_next[0] = flit_send_buffer_f[0];
    flit_send_buffer_next[1] = flit_send_buffer_f[1];
    flit_send_buffer_next[2] = flit_send_buffer_f[2];
    flit_send_buffer_next[3] = flit_send_buffer_f[3];
    flit_send_buffer_next[4] = flit_send_buffer_f[4];
    flit_send_buffer_next[5] = flit_send_buffer_f[5];
    flit_send_buffer_next[6] = flit_send_buffer_f[6];
    flit_send_buffer_next[7] = flit_send_buffer_f[7];
    flit_send_buffer_next[8] = flit_send_buffer_f[8];
    flit_send_buffer_next[9] = flit_send_buffer_f[9];
    flit_send_buffer_next[10] = flit_send_buffer_f[10];

    can_load_send_buffer = (flits_to_send_f == 0) || (flits_to_send_f == 1 && test_mem_rdy);
    store_load_rr_next = store_load_rr_f;
    test_store_next = test_store_f;
    test_load_next = test_load_f;
    
    // Send outgoing data
    if (test_running && flits_to_send_f > 0)
    begin
        test_mem_val = 1'b1;
        test_mem_data = flit_send_buffer_f[flits_to_send_f-1];
        if (test_mem_rdy)
            flits_to_send_next = flits_to_send_f - 1;
    end

    // Check for new store to send
    if (test_running && can_load_send_buffer && any_valid_no_store && 
        (store_load_rr_f == RR_STORE || ~any_valid_store_no_load))
    begin
        flits_to_send_next = 3 + data_payload_flits;

        // Data flits
        flit_send_buffer_next[data_payload_flits-1] = test_data_f[first_valid_no_store_id][`NOC_DATA_WIDTH-1:0];
        flit_send_buffer_next[data_payload_flits-2] = test_data_f[first_valid_no_store_id][(`NOC_DATA_WIDTH*2)-1:`NOC_DATA_WIDTH];
        flit_send_buffer_next[data_payload_flits-3] = test_data_f[first_valid_no_store_id][(`NOC_DATA_WIDTH*3)-1:`NOC_DATA_WIDTH*2];
        flit_send_buffer_next[data_payload_flits-4] = test_data_f[first_valid_no_store_id][(`NOC_DATA_WIDTH*4)-1:`NOC_DATA_WIDTH*3];
        flit_send_buffer_next[data_payload_flits-5] = test_data_f[first_valid_no_store_id][(`NOC_DATA_WIDTH*5)-1:`NOC_DATA_WIDTH*4];
        flit_send_buffer_next[data_payload_flits-6] = test_data_f[first_valid_no_store_id][(`NOC_DATA_WIDTH*6)-1:`NOC_DATA_WIDTH*5];
        flit_send_buffer_next[data_payload_flits-7] = test_data_f[first_valid_no_store_id][(`NOC_DATA_WIDTH*7)-1:`NOC_DATA_WIDTH*6];
        flit_send_buffer_next[data_payload_flits-8] = test_data_f[first_valid_no_store_id][(`NOC_DATA_WIDTH*8)-1:`NOC_DATA_WIDTH*7];
    
        // Header flit
        flit_send_buffer_next[2 + data_payload_flits] = MEM_STORE_HEADER_FLIT;
        flit_send_buffer_next[2 + data_payload_flits][`MSG_LENGTH] = 8'd2 + data_payload_flits;
        flit_send_buffer_next[2 + data_payload_flits][`MSG_MSHRID] = first_valid_no_store_id;

        // Address flit
        flit_send_buffer_next[1 + data_payload_flits] = {`NOC_DATA_WIDTH{1'b0}};
        flit_send_buffer_next[1 + data_payload_flits][`MSG_ADDR_] = test_address_f[first_valid_no_store_id];
        flit_send_buffer_next[1 + data_payload_flits][`MSG_DATA_SIZE_] = addr_mode;

        // Source flit
        flit_send_buffer_next[data_payload_flits] = MEM_REQ_FLIT3;

        store_load_rr_next = RR_LOAD;
        test_store_next[first_valid_no_store_id] = 1'b1;
    end
    // Check for new load to send
    else if (test_running && can_load_send_buffer && any_valid_store_no_load &&
             (store_load_rr_f == RR_LOAD || ~any_valid_no_store))
    begin
        flits_to_send_next = 3;
        
        // Header flit
        flit_send_buffer_next[2] = MEM_LOAD_HEADER_FLIT;
        flit_send_buffer_next[2][`MSG_MSHRID] = first_valid_store_no_load_id;

        // Address flit
        flit_send_buffer_next[1] = {`NOC_DATA_WIDTH{1'b0}};
        flit_send_buffer_next[1][`MSG_ADDR_] = test_address_f[first_valid_store_no_load_id];
        flit_send_buffer_next[1][`MSG_DATA_SIZE_] = addr_mode;

        // Source flit
        flit_send_buffer_next[0] = MEM_REQ_FLIT3;

        store_load_rr_next = RR_STORE;
        test_load_next[first_valid_store_no_load_id] = 1'b1;
    end

    // Clear complete entry
    if (test_running && any_complete)
    begin
        test_store_next[first_complete_id] = 1'b0;
        test_load_next[first_complete_id] = 1'b0;
    end
end

// Check store acks logic
always @ *
begin
    // Default values
    test_store_ack_next = test_store_ack_f;

    // Check for store ack
    if (test_running && mem_test_val && 
        mem_test_data[`MSG_DST_CHIPID_HI:`MSG_TYPE_LO] == MEM_STORE_ACK_HEADER[`MSG_DST_CHIPID_HI:`MSG_TYPE_LO])
        test_store_ack_next[mem_test_data[`MSG_MSHRID]] = 1'b1;

    // Clear complete entry
    if (test_running && any_complete)
        test_store_ack_next[first_complete_id] = 1'b0;
end

// Grab expected response data and transform to 2d
always @ *
begin
    resp_expected_data_2d[0] = test_data_f[resp_id_f][`NOC_DATA_WIDTH-1:0];
    resp_expected_data_2d[1] = test_data_f[resp_id_f][(`NOC_DATA_WIDTH*2)-1:`NOC_DATA_WIDTH];
    resp_expected_data_2d[2] = test_data_f[resp_id_f][(`NOC_DATA_WIDTH*3)-1:`NOC_DATA_WIDTH*2];
    resp_expected_data_2d[3] = test_data_f[resp_id_f][(`NOC_DATA_WIDTH*4)-1:`NOC_DATA_WIDTH*3];
    resp_expected_data_2d[4] = test_data_f[resp_id_f][(`NOC_DATA_WIDTH*5)-1:`NOC_DATA_WIDTH*4];
    resp_expected_data_2d[5] = test_data_f[resp_id_f][(`NOC_DATA_WIDTH*6)-1:`NOC_DATA_WIDTH*5];
    resp_expected_data_2d[6] = test_data_f[resp_id_f][(`NOC_DATA_WIDTH*7)-1:`NOC_DATA_WIDTH*6];
    resp_expected_data_2d[7] = test_data_f[resp_id_f][(`NOC_DATA_WIDTH*8)-1:`NOC_DATA_WIDTH*7];
end

// Need to shift the response data for sdctrl_test
// as SD expects the L2 will pick out the correct
// data out of the 8B, it ignores the bottom 3
// bits of the address
always @ *
begin
    mem_test_data_shifted = mem_test_data >> {test_address_f[resp_id_f][2:0], 3'b000};
end

// Logic to check if incoming data matches expected
always @ *
begin
    resp_data_matches = 1'b0;
    
    case (addr_mode)
        3'd0:
        begin
            // No data never matches I guess?
            resp_data_matches = 1'b0;
        end
        3'd1:
        begin
`ifdef SDCTRL_TEST
            if (mem_test_data_shifted[7:0] == resp_expected_data_2d[0][7:0])
`else // ifndef SDCTRL_TEST
            if (mem_test_data[7:0] == resp_expected_data_2d[0][7:0])
`endif // endif SDCTRL_TEST
                resp_data_matches = 1'b1;
        end
        3'd2:
        begin
`ifdef SDCTRL_TEST
            if (mem_test_data_shifted[15:0] == resp_expected_data_2d[0][15:0])
`else // ifndef SDCTRL_TEST
            if (mem_test_data[15:0] == resp_expected_data_2d[0][15:0])
`endif // endif SDCTRL_TEST
                resp_data_matches = 1'b1;
        end
        3'd3:
        begin
`ifdef SDCTRL_TEST
            if (mem_test_data_shifted[31:0] == resp_expected_data_2d[0][31:0])
`else // ifndef SDCTRL_TEST
            if (mem_test_data[31:0] == resp_expected_data_2d[0][31:0])
`endif // endif SDCTRL_TEST
                resp_data_matches = 1'b1;
        end
`ifdef SDCTRL_TEST
        3'd4:
        begin
            // SD only supports up to 8 bytes and always returns 8 flits.
            // It replicates the data to fill the remaining splace in the 8
            // flits.  So we should check all flits against the first 8bytes
            // of the test data.  If we check other flits according to test
            // data, as in the default case, it would fail.
            if (mem_test_data == resp_expected_data_2d[0])
                resp_data_matches = 1'b1;
        end
`endif // endif SDCTRL_TEST
        default:
        begin
            if (mem_test_data == resp_expected_data_2d[resp_flit_counter_f-1])
                resp_data_matches = 1'b1;
        end 
    endcase
end

// Check load response logic
always @ *
begin
    // Default values
    resp_flit_counter_next = resp_flit_counter_f;
    resp_id_next = resp_id_f;
    test_load_ack_next = test_load_ack_f;
    resp_data_err = 1'b0;

    // Helper variable to fill in expected payload length
    load_ack_hdr_plus_length = MEM_LOAD_ACK_HEADER | 
`ifdef SDCTRL_TEST
                               // SD always returns 8 flits, just replicates data
                               ({{`NOC_DATA_WIDTH-`MSG_LENGTH_WIDTH{1'b0}},`MSG_LENGTH_WIDTH'd8}<<`MSG_LENGTH_LO);
`else // ifndef SDCTRL_TEST
                               ({{`NOC_DATA_WIDTH-`MSG_LENGTH_WIDTH{1'b0}},data_payload_flits}<<`MSG_LENGTH_LO);
`endif // endif SDCTRL_TEST

    // Check for load ack header
    if (test_running && resp_flit_counter_f == 0 && mem_test_val &&
        mem_test_data[`MSG_DST_CHIPID_HI:`MSG_TYPE_LO] == load_ack_hdr_plus_length[`MSG_DST_CHIPID_HI:`MSG_TYPE_LO])
    begin
        resp_flit_counter_next = resp_flit_counter_f + 1;
        resp_id_next = mem_test_data[`MSG_MSHRID];
    end
    // Load ack data
    else if (test_running && resp_flit_counter_f > 0 && mem_test_val && resp_data_matches)
    begin
`ifdef SDCTRL_TEST
        if (resp_flit_counter_f == 8)
`else // ifndef SDCTRL_TEST
        if (resp_flit_counter_f == data_payload_flits)
`endif // endif SDCTRL_TEST
        begin
            resp_flit_counter_next = 0;
            test_load_ack_next[resp_id_f] = 1'b1;
        end
        else
        begin
            resp_flit_counter_next = resp_flit_counter_f + 1;
        end
    end
    // Error condition
    else if (test_running && resp_flit_counter_f > 0 && mem_test_val)
    begin
        // Wrong data!
        resp_data_err = 1'b1;
    end

    // Clear complete entry
    if (test_running && any_complete)
        test_load_ack_next[first_complete_id] = 1'b0;
end

//////////////////////////
// Sub-module Instances //
//////////////////////////

// Timeout counter
alarm_counter #(
    .COUNTER_WIDTH(TIMEOUT_COUNTER_WIDTH),
    .ALARM_THRESHOLD(TIMEOUT_COUNTER_THRESHOLD)
)timeout_counter(
    .clk(clk),
    .rst_n(timeout_rst_n),
    .en(test_running),
    .trigger(timeout_trigger)
);

address_own_addrdata address_own_addrdata(
    .en(test_mode_en[0]),

    .addr_incr_val(addr_incr_val),
    .mem_top_addr(mem_top_addr),

    .test_state_reset(test_state_reset),

    .curr_addr(last_inserted_address_f),
    .curr_data(last_inserted_data_f),

    .next_addr(address_own_address_next),
    .next_data(address_own_data_next),

    .done(address_own_done)
);

random_data_addrdata random_data_addrdata(
    .clk(clk),
    .rst_n(rst_n),
    .en(test_mode_en[1]),

    .addr_incr_val(addr_incr_val),
    .mem_top_addr(mem_top_addr),

    .test_state_reset(test_state_reset),

    .next_rdy(gen_addrdata_next_rdy),
    .next_val(random_data_next_val),
    .next_addr(random_data_address_next),
    .next_data(random_data_data_next),

    .done(random_data_done)
);

endmodule
